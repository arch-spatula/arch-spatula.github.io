"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[96093],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>f});var r=t(67294);function l(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,l=function(n,e){if(null==n)return{};var t,r,l={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(l[t]=n[t]);return l}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(l[t]=n[t])}return l}var o=r.createContext({}),u=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},m=function(n){var e=u(n.components);return r.createElement(o.Provider,{value:e},n.children)},p="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,l=n.mdxType,s=n.originalType,o=n.parentName,m=i(n,["components","mdxType","originalType","parentName"]),p=u(t),d=l,f=p["".concat(o,".").concat(d)]||p[d]||c[d]||s;return t?r.createElement(f,a(a({ref:e},m),{},{components:t})):r.createElement(f,a({ref:e},m))}));function f(n,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof n||l){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=n,i[p]="string"==typeof n?n:l,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19073:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=t(87462),l=(t(67294),t(3905));const s={sidebar_position:13,description:"\uc218\ud559",tags:["\uc218\ud559","\uc790\ub8cc\uad6c\uc870","\ubb38\uc81c\uc720\ud615","math"]},a="\uc218\ud559(Math)",i={unversionedId:"algorithms-and-data-structures/math",id:"algorithms-and-data-structures/math",title:"\uc218\ud559(Math)",description:"\uc218\ud559",source:"@site/diy-cs/algorithms-and-data-structures/math.md",sourceDirName:"algorithms-and-data-structures",slug:"/algorithms-and-data-structures/math",permalink:"/diy-cs/algorithms-and-data-structures/math",draft:!1,tags:[{label:"\uc218\ud559",permalink:"/diy-cs/tags/\uc218\ud559"},{label:"\uc790\ub8cc\uad6c\uc870",permalink:"/diy-cs/tags/\uc790\ub8cc\uad6c\uc870"},{label:"\ubb38\uc81c\uc720\ud615",permalink:"/diy-cs/tags/\ubb38\uc81c\uc720\ud615"},{label:"math",permalink:"/diy-cs/tags/math"}],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,description:"\uc218\ud559",tags:["\uc218\ud559","\uc790\ub8cc\uad6c\uc870","\ubb38\uc81c\uc720\ud615","math"]},sidebar:"tutorialSidebar",previous:{title:"\ud050(Queue)",permalink:"/diy-cs/algorithms-and-data-structures/queue"},next:{title:"\ubb38\uc790\uc5f4 \uc870\uc791",permalink:"/diy-cs/algorithms-and-data-structures/string-manipulation"}},o={},u=[{value:"\uc18c\uc218 \ucc3e\uae30",id:"\uc18c\uc218-\ucc3e\uae30",level:2},{value:"\uc18c\uc218 \ub9cc\ub4e4\uae30",id:"\uc18c\uc218-\ub9cc\ub4e4\uae30",level:2},{value:"\uc758\uc0c1",id:"\uc758\uc0c1",level:2},{value:"\ub2e4\uc74c\uc5d0 \uc62c \uc22b\uc790",id:"\ub2e4\uc74c\uc5d0-\uc62c-\uc22b\uc790",level:2},{value:"\ub098\ub294 \ud589\ubcf5\ud569\ub2c8\ub2e4~",id:"\ub098\ub294-\ud589\ubcf5\ud569\ub2c8\ub2e4",level:2},{value:"\ud329\ud1a0\ub9ac\uc5bc",id:"\ud329\ud1a0\ub9ac\uc5bc",level:2},{value:"\ud070 \uc218 \ucc98\ub9ac",id:"\ud070-\uc218-\ucc98\ub9ac",level:2},{value:"\ud070 \uc218 A+B",id:"\ud070-\uc218-ab",level:3},{value:"\ud070 \uc218 \uacf1\uc148",id:"\ud070-\uc218-\uacf1\uc148",level:3},{value:"\ud070 \uc218 (BIG)",id:"\ud070-\uc218-big",level:3}],m={toc:u},p="wrapper";function c(n){let{components:e,...t}=n;return(0,l.kt)(p,(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\uc218\ud559math"},"\uc218\ud559(Math)"),(0,l.kt)("p",null,"\uc218\ud559\uc801 \uc18c\uc591\uacfc \uc9c0\uc2dd\uc5d0 \uc758\uc874\ud574\uc11c \ubb38\uc81c\ub97c \ud480\uc5b4\uc57c \ud558\ub294 \uacbd\uc6b0\ub4e4\ub3c4 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774\ub7f0 \ubb38\uc81c \uc720\ud615\uc740 \uc774\uacf5\uacc4\uc5f4\uc774 \uc808\ub300\uc801\uc73c\ub85c \uc720\ub9ac\ud569\ub2c8\ub2e4. \ubb3c\ub860 \uc5ec\uc804\ud788 \uc81c\uc77c \uc720\ub9ac\ud55c \uc0ac\ub78c\ub4e4\uc740 \ucef4\ud4e8\ud130 \uacfc\ud559 \uacc4\uc5f4 \uc804\uacf5\uc790\uc785\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\uc18c\uc218-\ucc3e\uae30"},"\uc18c\uc218 \ucc3e\uae30"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/12921"},"\uc18c\uc218 \ucc3e\uae30")),(0,l.kt)("p",null,"\uc5d0\ub77c\ud1a0\uc2a4\ud14c\ub124\uc2a4\uc758 \uccb4(Sieve of Eratosthenes)\uc744 \ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} n\n * @returns {number}\n */\nfunction solution(n) {\n  let result = 0;\n  return result;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import solution, { isPrime } from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// n    result\n// 10   4\n// 5    3\n\ndescribe('\uc18c\uc218 \ub9cc\ub4e4\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution(10)).toBe(4);\n  });\n\n  test('\uc608\uc81c 2', () => {\n    expect(solution(5)).toBe(3);\n  });\n});\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 09\uc6d4 12\uc77c \ud480\uc774"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://1ets-just-do-it.tistory.com/43#google_vignette"},"[\ud504\ub85c\uadf8\ub798\uba38\uc2a4] \uc18c\uc218 \ucc3e\uae30 - Lv.1 - pyflu")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://namu.wiki/w/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98%20%EC%B2%B4"},"\uc5d0\ub77c\ud1a0\uc2a4\ud14c\ub124\uc2a4\uc758 \uccb4 - \ub098\ubb34\uc704\ud0a4")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/15471291/sieve-of-eratosthenes-algorithm-in-javascript-running-endless-for-large-number"},"Sieve of Eratosthenes algorithm in JavaScript running endless for large number - stackoverflow")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} n\n * @returns {number}\n */\nfunction solution(n) {\n  const upperLimit = Math.sqrt(n);\n  const arr = Array.from({ length: n + 1 }, () => true);\n\n  for (let i = 2; i <= upperLimit; i++)\n    if (arr[i]) for (let j = i * i; j <= n; j += i) arr[j] = false;\n\n  arr[0] = false;\n  arr[1] = false;\n\n  return arr.filter((elem) => elem).length;\n}\n")),(0,l.kt)("p",null,"\ubd80\ubd84\uc744 \ubcf5\uc0ac\ud574\uc11c \ud480\uc5c8\uc2b5\ub2c8\ub2e4."))),(0,l.kt)("h2",{id:"\uc18c\uc218-\ub9cc\ub4e4\uae30"},"\uc18c\uc218 \ub9cc\ub4e4\uae30"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/12977"},"\uc18c\uc218 \ub9cc\ub4e4\uae30")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @returns {number}\n */\nfunction solution(nums) {\n  let result = -1;\n  return result;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import solution, { isPrime } from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// nums         result\n// [1,2,3,4]      1\n// [1,2,7,6,4]  4\n\ndescribe('\uc18c\uc218 \ub9cc\ub4e4\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution([1, 2, 3, 4])).toBe(1);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution([1, 2, 7, 6, 4])).toBe(4);\n  });\n});\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 09\uc6d4 25\uc77c \ud480\uc774"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"describe('helper', () => {\n  test('\uc18c\uc218 \ub9de\uc74c', () => {\n    expect(isPrime(7)).toBe(true);\n  });\n  test('\uc18c\uc218 \uc544\ub2d8', () => {\n    expect(isPrime(6)).toBe(false);\n  });\n});\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @returns {number}\n */\nfunction solution(nums) {\n  let result = 0;\n  // 3\uac1c\ub97c \ubf51\ub294\ub2e4. ijk\n  for (let i = 0; i < nums.length; i++) {\n    // \uccab\ubc88\uc9f8\ub97c \ubf51\ub294\ub2e4.\n    const first = nums[i];\n    for (let j = i + 1; j < nums.length; j++) {\n      // \ub450\ubc88\uc9f8\ub97c \ubf51\ub294\ub2e4.\n      const second = nums[j];\n      for (let k = j + 1; k < nums.length; k++) {\n        // \uc138\ubc88\uc9f8\ub97c \ubf51\ub294\ub2e4.\n        const third = nums[k];\n        // \ubf51\uc740 \uc22b\uc790 3\uac1c\ub97c \ud569\ud558\uace0 \uc18c\uc218\uc778\uc9c0 \ud310\ubcc4\ud55c\ub2e4.\n        // console.log('first: %d, second: %d, third: %d', first, second, third);\n        if (isPrime(first + second + third)) result += 1;\n        // \uc18c\uc218\uba74 1\uc744 \uac00\uc0b0\ud55c\ub2e4.\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * @param {number} num\n * @returns {boolean}\n */\nfunction isPrime(num) {\n  let div = 2;\n  while (num > div) {\n    if (num % div === 0) return false;\n    div += 1;\n  }\n  return true;\n}\n\nexport default solution;\n\nexport { isPrime };\n")))),(0,l.kt)("h2",{id:"\uc758\uc0c1"},"\uc758\uc0c1"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/42578"},"\uc758\uc0c1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {[string, string][]} clothes\n * @returns {number}\n */\nfunction solution(clothes) {\n  let result = 1;\n  return result;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('\uc758\uc0c1', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution([\n        ['yellow_hat', 'headgear'],\n        ['blue_sunglasses', 'eyewear'],\n        ['green_turban', 'headgear'],\n      ])\n      // 2\uac1c \uc911 1\uac1c + 1\uac1c \uc911 1\uac1c = 2\n      // 1\uac1c \uc911 1\uac1c = 3\n      // 3C1 \uc804\uccb4 \uc911 1\uac1c = 3\n      // 2\uac1c\uc758 \ud0a4\ub85c 2C1 = 2\n\n      // 2C1 + 1C1 = 3\n      // 2C1 * 1C1 = 2\n    ).toBe(5);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(\n      solution([\n        ['crow_mask', 'face'],\n        ['blue_sunglasses', 'face'],\n        ['smoky_makeup', 'face'],\n      ])\n      // 3\uac1c \uc911 1\uac1c = 3 3C1\n    ).toBe(3);\n  });\n\n  test('\uc608\uc81c 3', () => {\n    expect(\n      solution([\n        ['crow_mask', 'foo'],\n        ['blue_sunglasses', 'bar'],\n        ['smoky_makeup', 'baz'],\n      ])\n      // 3\uac1c \uc911 1\uac1c = 3 3C1\n      // 3\uac1c \uc911 2\uac1c = 3 3C2\n      // 3\uac1c \uc911 3\uac1c = 1 3C3\n    ).toBe(7);\n  });\n});\n// AB CD EF\n// A B C D E F\n// AC AD AE AF BC BD BE BF CE CF DE DF\n// ACE ACF ADE ADF BCE BCF BDE BDF\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 09\uc6d4 19\uc77c"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {[string, string][]} clothes\n * @returns {number}\n */\nfunction solution(clothes) {\n  let result = 1;\n  const memo = new Map();\n  clothes.forEach(([name, kind]) => {\n    if (!memo.get(kind)) memo.set(kind, [name]);\n    else memo.set(kind, [...memo.get(kind), name]);\n  });\n  // \uc544\ub798\uac00 \uc5b4\ub824\uc6e0\uc2b5\ub2c8\ub2e4.\n  for (const item of memo.values()) {\n    result *= item.length + 1;\n  }\n  // 1\uc885\ub958 1\uac1c\n  // nC1 + nC1 ...\n  // 2\uc885\ub958 1\uac1c\n  // nC1 * nC1 +\n  // 3\uc885\ub958 1\uac1c\n  // 4\uc885\ub958 1\uac1c ...\n  return result - 1;\n}\n\nexport default solution;\n")),(0,l.kt)("p",null,"\uc21c\uc5f4\uacfc \uc870\ud569\uc744 \ud45c\ud604\ud558\uc9c0 \ubabb\ud588\uace0 \ub610 \uc704 \ubb38\uc81c\ub97c \ub300\uc218\uc801\uc73c\ub85c \ud45c\ud604\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/questions/46417"},"\ud574\uc124\uc744 \ubd10\ub3c4 \ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4.. \ub204\uac00 \uc124\uba85\uc880 \ud574\uc8fc\uc168\uc73c\uba74 \uac10\uc0ac\ud558\uaca0\uc2b5\ub2c8\ub2e4.")),(0,l.kt)("p",null,"\ud574\uc124\uc744 \ubd24\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc21c\uc5f4\uacfc \uc870\ud569 \uacbd\uc6b0\uc758 \uc218 \ubb38\uc81c\uc600\uc2b5\ub2c8\ub2e4."))),(0,l.kt)("h2",{id:"\ub2e4\uc74c\uc5d0-\uc62c-\uc22b\uc790"},"\ub2e4\uc74c\uc5d0 \uc62c \uc22b\uc790"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/120924"},"\ub2e4\uc74c\uc5d0 \uc62c \uc22b\uc790")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function solution(common) {\n  var answer = 0;\n  return answer;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// common         result\n// [1, 2, 3, 4] 5\n// [2, 4, 8]      16\n\ndescribe('\ub2e4\uc74c\uc5d0 \uc62c \uc22b\uc790', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution([1, 2, 3, 4])).toBe(5);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution([2, 4, 8])).toBe(16);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution([2, -4, 8])).toBe(-16);\n  });\n});\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 02\uc77c \uc2dc\ub3c4"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} common\n * @returns {number}\n */\nfunction solution(common) {\n  let result = null;\n  const [first, second, third] = common;\n  const firstDiff = second - first;\n  const secondDiff = third - second;\n\n  if (firstDiff === secondDiff) {\n    // \ub4f1\ucc28\uc218\uc5f4\n    result = first + firstDiff * common.length;\n  } else {\n    // \ub4f1\ube44\uc218\uc5f4\n    result = first * Math.pow(second / first, common.length);\n  }\n\n  return result;\n}\n\nexport default solution;\n")))),(0,l.kt)("h2",{id:"\ub098\ub294-\ud589\ubcf5\ud569\ub2c8\ub2e4"},"\ub098\ub294 \ud589\ubcf5\ud569\ub2c8\ub2e4~"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.acmicpc.net/problem/14652"},"\ub098\ub294 \ud589\ubcf5\ud569\ub2c8\ub2e4~")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { solution } from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('N \ucc0d\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution(3, 4, 6)).toEqual([1, 2]);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution(6, 4, 14)).toEqual([3, 2]);\n  });\n});\n")),(0,l.kt)("p",null,"\uc5ec\uae30\uc11c \uba54\ubaa8\ub9ac \ucd08\uacfc\ub97c \ud569\ub2c8\ub2e4."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 29\uc77c 1\ucc28 \uc2dc\ub3c4"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [n, m, k] = fs.readFileSync(filePath).toString().split(' ').map(Number);\n\n/**\n * @param {number} n\n * @param {number} m\n * @param {number} k\n * @returns {number}\n */\nfunction solution(n, m, k) {\n  let x = 0;\n  let y = 0;\n\n  // \ubc30\uc5f4 \ub9cc\ub4e4\uae30, \uc6d0\uc18c \ud0d0\uc0c9\n  let idx = 0;\n  const list = [];\n  for (let j = 0; j < n; j++) {\n    const innerList = [];\n    for (let i = 0; i < m; i++) {\n      innerList.push(idx);\n      idx += 1;\n    }\n    list.push(innerList);\n  }\n\n  for (let i = 0; i < list.length; ) {\n    const inner = list[i];\n    for (let j = 0; j < inner.length; ) {\n      const idx = inner[j];\n      if (k === idx) return [i, j];\n      j += 1;\n    }\n    i += 1;\n  }\n\n  return [n, m];\n}\n\nconst [x, y] = solution(n, m, k);\nconsole.log(x, y);\n")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 29\uc77c \ud480\uc774"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [n, m, k] = fs.readFileSync(filePath).toString().split(' ').map(Number);\n\n/**\n * @param {number} n\n * @param {number} m\n * @param {number} k\n * @returns {number}\n */\nfunction solution(n, m, k) {\n  // \ubc30\uc5f4 \ub9cc\ub4e4\uae30, \uc6d0\uc18c \ud0d0\uc0c9\n  let idx = 0;\n\n  for (let y = 0; y < n; y++) {\n    for (let x = 0; x < m; x++) {\n      if (idx === k) return [y, x];\n      idx += 1;\n    }\n  }\n\n  return [n, m];\n}\n\nconst [x, y] = solution(n, m, k);\nconsole.log(x, y);\n")))),(0,l.kt)("p",null,"\uc774\ub807\uac8c \ud574\uc11c \ud480\ub9bc"),(0,l.kt)("p",null,"\uc26c\uc6b4 \ubb38\uc81c\uc778\ub370 \ub2f9\ud669\ud568"),(0,l.kt)("h2",{id:"\ud329\ud1a0\ub9ac\uc5bc"},"\ud329\ud1a0\ub9ac\uc5bc"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.acmicpc.net/problem/10872"},"\ud329\ud1a0\ub9ac\uc5bc")),(0,l.kt)("p",null,"\ud329\ud1a0\ub9ac\uc5bc\uc744 \uad6c\ud604\ud560 \ub54c \uc7ac\uadc0\ud568\uc218\ub97c \ud53c\ud558\uace0 \ubc18\ubcf5\ubb38\uc73c\ub85c \ucc98\ub9ac\ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4. \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\uc758 callStack \uc0ac\uc774\uc988\ub294 \uc791\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { solution } from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('N \ucc0d\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution(0)).toBe(1);\n  });\n});\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [input] = fs.readFileSync(filePath).toString().split(' ').map(Number);\n\n/**\n * @param {number} num\n * @returns {number}\n */\nfunction solution(num) {\n  return null;\n}\n\nconsole.log(solution(input));\n\nmodule.exports = {\n  solution,\n};\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 24\uc77c"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [input] = fs.readFileSync(filePath).toString().split(' ').map(Number);\n\n/**\n * @param {number} num\n * @returns {number}\n */\nfunction solution(num) {\n  let result = 1;\n  if (num <= 1) return 1;\n  for (let i = num; 1 <= i; i--) {\n    result *= i;\n  }\n  return result;\n}\n\nconsole.log(solution(input));\n\nmodule.exports = {\n  solution,\n};\n")))),(0,l.kt)("h2",{id:"\ud070-\uc218-\ucc98\ub9ac"},"\ud070 \uc218 \ucc98\ub9ac"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub294 ",(0,l.kt)("inlineCode",{parentName:"li"},"BigInt")," \uc790\ub8cc\ud615\uc744 \ud65c\uc6a9\ud574\uc11c \ud480\uba74 \ub429\ub2c8\ub2e4.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BigInt"),"\ub294 \uc804\ud30c\ud574\uc11c \ud480\uc774\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uacc4\uc0b0\ud574\uc57c \ud558\ub294 \uc22b\uc790\uac00 1\uac1c\ub77c\uace0 ",(0,l.kt)("inlineCode",{parentName:"li"},"BigInt"),"\ub77c\uba74 \ubaa8\ub450 ",(0,l.kt)("inlineCode",{parentName:"li"},"BigInt"),"\ub85c \ubcc0\ud658\ud574\uc11c \ud480\uc774\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BigInt"),"\ub97c \ucd9c\ub825\ud560 \ub54c\ub294 \ud56d\uc0c1 \uc22b\uc790 \ub4a4\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"li"},"n"),"\uc774 \ubd99\uc2b5\ub2c8\ub2e4.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"${BigInt(100)}")," \uc774\ub807\uac8c \uc791\uc131\ub418\uc5b4 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\ub294 \ub300\uc2e0\uc5d0 \ub4a4\uc5d0 \ubd99\ub294 n\uc744 \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Number")," \uc0dd\uc131\uc790 \ud568\uc218\uc758 ",(0,l.kt)("inlineCode",{parentName:"li"},"isSafeInteger"),"\ub97c \ud65c\uc6a9\ud558\ub294 \uc804\ub7b5\ub3c4 \ucde8\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 $ 2^{52} -1 $ \uae4c\uc9c0\ub9cc \uc815\uc218\ub85c \uc778\uc2dd\ud558\uace0 \ucd08\uacfc\ud558\uba74 ",(0,l.kt)("inlineCode",{parentName:"li"},"BigInt"),"\ub85c \ucc98\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ul"},"BigInt\ub85c \ucc98\ub9ac\uac00 \ud544\uc694\ud55c\uc9c0 \uc5ec\ubd80\ub97c \ud310\ub2e8\ud560 \ub54c \ud65c\uc6a9\ud560 \uc218 \uc788\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4.")))),(0,l.kt)("h3",{id:"\ud070-\uc218-ab"},"\ud070 \uc218 A+B"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.acmicpc.net/problem/10757"},"\ud070 \uc218 A+B")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { solution } from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('N \ucc0d\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(BigInt(9223372036854775807n), BigInt(9223372036854775808n))\n    ).toBe('18446744073709551615');\n  });\n});\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 24\uc77c"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [num1, num2] = fs\n  .readFileSync(filePath)\n  .toString()\n  .split(' ')\n  .map(BigInt);\n\n/**\n * @param {number | bigint} num1\n * @param {number | bigint} num2\n * @returns {number | bigInt}\n */\nfunction solution(num1, num2) {\n  if (!Number.isSafeInteger(num1) || !Number.isSafeInteger(num2))\n    return `${BigInt(num1) + BigInt(num2)}`;\n  return num1 + num2;\n}\n\nconsole.log(solution(num1, num2));\n\nmodule.exports = {\n  solution,\n};\n")))),(0,l.kt)("p",null,"\ud78c\ud2b8 \uc77d\uc744 \ub54c\ubd80\ud130 Bigint\ub85c \uc77d\uc5b4\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"\ud070-\uc218-\uacf1\uc148"},"\ud070 \uc218 \uacf1\uc148"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"2023\ub144 10\uc6d4 24\uc77c"),(0,l.kt)("div",{markdown:"1"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [num1, num2] = fs\n  .readFileSync(filePath)\n  .toString()\n  .split(' ')\n  .map(BigInt);\n\n/**\n * @param {number} num1\n * @param {number} num2\n * @returns {number}\n */\nfunction solution(num1, num2) {\n  if (!Number.isSafeInteger(num1) || !Number.isSafeInteger(num2))\n    `${BigInt(num1) * BigInt(num1)}`;\n  return `${num1 * num2}`;\n}\n\nconsole.log(solution(num1, num2));\n")))),(0,l.kt)("h3",{id:"\ud070-\uc218-big"},"\ud070 \uc218 (BIG)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { solution } from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('N \ucc0d\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(\n        BigInt(\n          20000303200003032000030320000303200003032000030320000303200003032000030320000303n\n        )\n      )\n    ).toBe('0');\n  });\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(\n        BigInt(\n          123456789123456789123456789123456789123456789123456789123456789123456789n\n        )\n      )\n    ).toBe('1313652');\n  });\n});\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst filePath =\n  process.platform === 'linux' ? '/dev/stdin' : __dirname + '/input.txt';\nconst [input] = fs.readFileSync(filePath).toString().split('\\n').map(BigInt);\n\n/**\n * @param {string} input\n * @returns {string}\n */\nfunction solution(input) {\n  return `${BigInt(input) % 20000303}`;\n}\n\nconsole.log(solution(input));\n")))}c.isMDXComponent=!0}}]);