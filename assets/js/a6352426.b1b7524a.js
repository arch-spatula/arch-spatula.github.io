"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[3263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var l=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=l.createContext({}),u=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?l.createElement(h,r(r({ref:t},p),{},{components:n})):l.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,r[1]=i;for(var u=2;u<a;u++)r[u]=n[u];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var l=n(87462),o=(n(67294),n(3905));const a={title:"bun 1.0 \ucd9c\uc2dc",authors:["arch-spatula"],tags:["\ub7f0\ud0c0\uc784","\ubc88\ub4e4\ub7ec","\ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800","\ud14c\ud06c \ud2b8\ub80c\ub4dc \uc90d\uc90d"],description:"bun 1.0\uc774 \ucd9c\uc2dc",toc_max_heading_level:6},r="bun 1.0 \ucd9c\uc2dc",i={permalink:"/blog/2023/09/17/bun",editUrl:"https://github.com/arch-spatula/arch-spatula.github.io/blob/dev/blog/2023-09-17-bun.md",source:"@site/blog/2023-09-17-bun.md",title:"bun 1.0 \ucd9c\uc2dc",description:"bun 1.0\uc774 \ucd9c\uc2dc",date:"2023-09-17T00:00:00.000Z",formattedDate:"2023\ub144 9\uc6d4 17\uc77c",tags:[{label:"\ub7f0\ud0c0\uc784",permalink:"/blog/tags/\ub7f0\ud0c0\uc784"},{label:"\ubc88\ub4e4\ub7ec",permalink:"/blog/tags/\ubc88\ub4e4\ub7ec"},{label:"\ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800",permalink:"/blog/tags/\ud328\ud0a4\uc9c0-\ub9e4\ub2c8\uc800"},{label:"\ud14c\ud06c \ud2b8\ub80c\ub4dc \uc90d\uc90d",permalink:"/blog/tags/\ud14c\ud06c-\ud2b8\ub80c\ub4dc-\uc90d\uc90d"}],readingTime:14.335,hasTruncateMarker:!0,authors:[{name:"arch-spatula",title:"Cook-Book \ub9ce\uc774 \ub9cc\ub4ed\ub2c8\ub2e4",url:"https://github.com/arch-spatula",imageURL:"https://github.com/arch-spatula.png",key:"arch-spatula"}],frontMatter:{title:"bun 1.0 \ucd9c\uc2dc",authors:["arch-spatula"],tags:["\ub7f0\ud0c0\uc784","\ubc88\ub4e4\ub7ec","\ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800","\ud14c\ud06c \ud2b8\ub80c\ub4dc \uc90d\uc90d"],description:"bun 1.0\uc774 \ucd9c\uc2dc",toc_max_heading_level:6},nextItem:{title:"\ub9c8\ud06c\ub2e4\uc6b4\uc73c\ub85c \ub9cc\ub4dc\ub294 PPT",permalink:"/blog/2023/09/11/ppt"}},s={authorsImageUrls:[void 0]},u=[{value:"Bun 1.0 is here \uc601\uc0c1",id:"bun-10-is-here-\uc601\uc0c1",level:2},{value:"Bun 1.0 \uacf5\uc2dd \ube14\ub85c\uadf8",id:"bun-10-\uacf5\uc2dd-\ube14\ub85c\uadf8",level:2},{value:"Bun\uc758 \ucca0\ud559",id:"bun\uc758-\ucca0\ud559",level:3},{value:"Bun is an all-in-one toolkit",id:"bun-is-an-all-in-one-toolkit",level:4},{value:"Why Bun exists",id:"why-bun-exists",level:4},{value:"\uc124\uce58",id:"\uc124\uce58",level:3},{value:"\ud14c\ud06c \uc778\ud50c\ub8e8\uc5b8\uc11c\ub4e4\uc758 \ubc18\uc751",id:"\ud14c\ud06c-\uc778\ud50c\ub8e8\uc5b8\uc11c\ub4e4\uc758-\ubc18\uc751",level:2},{value:"fireship",id:"fireship",level:3},{value:"Lee Robinson",id:"lee-robinson",level:3},{value:"Theo",id:"theo",level:3},{value:"bun\uc73c\ub85c \ub9cc\ub4dc\ub294 \uc720\uc0ac \ubc31\uc5d4\ub4dc \uac1c\ubc1c \uc2e4\uc804",id:"bun\uc73c\ub85c-\ub9cc\ub4dc\ub294-\uc720\uc0ac-\ubc31\uc5d4\ub4dc-\uac1c\ubc1c-\uc2e4\uc804",level:2},{value:"file \uc77d\uace0 \uc4f0\uae30",id:"file-\uc77d\uace0-\uc4f0\uae30",level:3},{value:"\uc11c\ubc84",id:"\uc11c\ubc84",level:3},{value:"SQLite \ub0b4\uc7a5 DB \ud65c\uc6a9\ud558\uae30",id:"sqlite-\ub0b4\uc7a5-db-\ud65c\uc6a9\ud558\uae30",level:3},{value:"GET",id:"get",level:4},{value:"POST",id:"post",level:4},{value:"DELETE",id:"delete",level:4},{value:"UPDATE",id:"update",level:4},{value:"\uc8fc\uc758\uc0ac\ud56d",id:"\uc8fc\uc758\uc0ac\ud56d",level:2},{value:"\uacb0\ub860",id:"\uacb0\ub860",level:2}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\ube14\ub9ac\ub529 \uc5e3\uc9c0 Deno\ub97c \uc0ac\uc6a9\ud558\ub2e4\uac00 \uacfc\ub2e4\ucd9c\ud608\uc744 \uadf8\ub807\uac8c \ub2f9\ud558\uace0\ub3c4 \uc544\uc9c1\ub3c4 \uc815\uc2e0 \ubabb\ucc28\ub9b0 \uac83 \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"bun-10-is-here-\uc601\uc0c1"},"Bun 1.0 is here \uc601\uc0c1"),(0,o.kt)("iframe",{class:"codepen",src:"https://www.youtube.com/embed/BsnCpESUEqM",title:"Bun 1.0 is here",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,o.kt)("p",null,"\uc800\ucc98\ub7fc \ubb38\ud574\ub825 \ub538\ub9ac\ub294 \uc0ac\ub78c\uc744 \uc704\ud55c \uc720\ud29c\ube0c \uc601\uc0c1\uc744 \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"bun-10-\uacf5\uc2dd-\ube14\ub85c\uadf8"},"Bun 1.0 \uacf5\uc2dd \ube14\ub85c\uadf8"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://bun.sh/blog/bun-v1.0"},"Bun 1.0 \uacf5\uc2dd \ube14\ub85c\uadf8")),(0,o.kt)("p",null,"\ud558\uc9c0\ub9cc \ubb38\ud574\ub825\uc740 \uc5c6\uc9c0\ub9cc \uc9c1\uc811 \uc2dc\ub3c4\ud574\ubcf4\uace0 \uc2f6\uc740 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud574 \ube14\ub85c\uadf8 \ub9c1\ud06c\ub97c \uc900\ube44\ud588\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\ub610 \uc800\ucc98\ub7fc \uc601\uc5b4\uc2e4\ub825 \ubd80\uc871\ud55c \uc5ec\ub7ec\ubd84\ub4e4\uc744 \uc704\ud574 \ubc88\uc5ed\ub3c4 \uac19\uc774 \ub2e4\ub8e8\uaca0\uc2b5\ub2c8\ub2e4. \ubaa8\ub450\ub294 \uc548 \ub2e4\ub8e8\uace0 \ub610 \uc77c\ubd80 \ud3b8\uc9d1\ud574\uc11c \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Bun 1.0 is finally here.")),(0,o.kt)("p",null,"Bun 1.0\uc774 \ub4dc\ub514\uc5b4 \ucd9c\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Bun is a fast, all-in-one toolkit for running, building, testing, and debugging JavaScript and TypeScript, from a single file to a full-stack application. Today, Bun is stable and production-ready.")),(0,o.kt)("p",null,"Bun\uc740 \ube60\ub974\uace0 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\uc640 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8 \ubaa8\ub450\ub97c \uc704\ud55c \uc2e4\ud589, \ube4c\ub529, \ud14c\uc2a4\ud2b8, \ub514\ubc84\uac70 \ubaa8\ub4e0 \uac83\uc744 \uac16\uace0 \uc788\ub294 \ud234\ud0b7\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ud30c\uc77c\ub85c \ud480\uc2a4\ud0dd \uc571\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ub298 Bun\uc740 table \ub9b4\ub9ac\uc988\uc774\uace0 production\uc5d0\uc11c \uc0ac\uc6a9\ud574\ub3c4 \uad1c\ucc2e\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"bun\uc758-\ucca0\ud559"},"Bun\uc758 \ucca0\ud559"),(0,o.kt)("h4",{id:"bun-is-an-all-in-one-toolkit"},"Bun is an all-in-one toolkit"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"We love JavaScript. It's mature, it moves fast, and its developer community is vibrant and passionate. It's awesome.")),(0,o.kt)("p",null,"\uc6b0\ub9ac\ub294 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\ub791\ud569\ub2c8\ub2e4. \uc131\uc219\ud558\uace0 \ube60\ub974\uac8c \uc6c0\uc9c1\uc774\uace0 \uac1c\ubc1c\uc790 \ucee4\ubba4\ub2c8\ud2f0\ub294 \uac01\uc591\uac01\uc0c9\ud558\uace0 \uc5f4\uc815\uc801\uc785\ub2c8\ub2e4. \uc5b4\uc378\ud569\ub2c8\ub2e4."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"However, since Node.js debuted 14 years ago, layers and layers of tooling have accumulated on top of each other. And like any system that grows and evolves without centralized planning, JavaScript tooling has become slow and complex.")),(0,o.kt)("p",null,"\ud558\uc9c0\ub9cc 14\ub144 \uc804 Node.js \ub370\ubdd4 \uc774\ud6c4 \uc5ec\ub7ec \uacc4\uce35\uc758 \ud234\ub9c1\uc774 \uc11c\ub85c \ub4a4\ub36e\uc5ec\uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559\uc5d0\uc11c \uacc4\ud68d \uc5c6\uc774 \uc790\ub77c\ub098\uace0 \uc9c4\ud654\ud558\ub294 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\ucc98\ub7fc \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \ud234\ub9c1\uc740 \ub290\ub824\uc9c0\uace0 \ubcf5\uc7a1\ud574\uc84c\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h4",{id:"why-bun-exists"},"Why Bun exists"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Bun's goal is simple: eliminate slowness and complexity without throwing away everything that's great about JavaScript. Your favorite libraries and frameworks should still work, and you shouldn't need to unlearn the conventions you're familiar with.")),(0,o.kt)("p",null,"Bun\uc758 \ubcf5\ud45c\ub294 \ub2e8\uc21c\ud569\ub2c8\ub2e4. \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\uc758 \uc7a5\uc810\uc740 \ub0a8\uaca8\ub450\uace0 \ub290\ub9ac\uace0 \ubcf5\uc7a1\ud568\uc744 \uc81c\uac70\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2f9\uc2e0\uc758 \ucd5c\uc560 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc640 \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc5ec\uc804\ud788 \ub3d9\uc791\ud558\uace0 \uc775\uc219\ud588\ub358 \ucee8\ubca4\uc158\uc744 \ub0a0\ub9b4 \ud544\uc694\uc5c6\uc5b4\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You will however need to unlearn the many tools that Bun makes unnecessary:")),(0,o.kt)("p",null,"\ud558\uc9c0\ub9cc \ub2f9\uc2e0\uc740 Bun\uc774 \ud544\uc694\uc5c6\uac8c \ub9cc\ub4dc\ub294 \uc5ec\ub7ec \ud234\uc744 \uc78a\uc5b4\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\uc5ec\uae30\uae4c\uc9c0\uac00 Bun\uc758 \uc911\uc2ec\uc774 \ub418\ub294 \ucca0\ud559\uc785\ub2c8\ub2e4. Bun\uc740 Runtime, Transpilers, Bundlers, Package Managers, Test Runner\uc785\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"\uc124\uce58"},"\uc124\uce58"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker pull oven/bun\ndocker run --rm --init --ulimit memlock=-1:-1 oven/bun\n")),(0,o.kt)("p",null,"\uac1c\uc778\uc801\uc73c\ub85c \uc81c\uc77c \uad8c\uc7a5\ud558\ub294 docker\uc785\ub2c8\ub2e4."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/oven-sh/bun/discussions/1040"},"Does bun has any docker image available?")),(0,o.kt)("p",null,"\uc774\uc288\uc5d0\uc11c \uad8c\uc7a5\ud558\ub294 docker image\uc785\ub2c8\ub2e4. \uacf5\uc2dd\ubb38\uc11c\uc880 \uc77d\uc73c\ub77c\uace0 \ud558\ub294\uad70\uc694."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/oven/bun"},"oven/bun - docker hub")),(0,o.kt)("p",null,"\uc2e4\uc81c\ub85c \uc9c1\uc811 \uc6b4\uc601 \uc911\uc778 docker\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"brew tap oven-sh/bun\nbrew install bun\n")),(0,o.kt)("p",null,"docker\ub97c \ubaa8\ub974\uba74 brew\ub85c \uc124\uce58\ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4. ",(0,o.kt)("del",{parentName:"p"},"\uc800\ub294 \uc544\uc9c1\ub3c4 docker\ub97c \uc124\uba85\uc11c\ub9cc \ubcf4\uace0 \ud558\uc8e0 \uc815\ud655\ud788 \uc774\ud574\ub294 \ubabb\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("h2",{id:"\ud14c\ud06c-\uc778\ud50c\ub8e8\uc5b8\uc11c\ub4e4\uc758-\ubc18\uc751"},"\ud14c\ud06c \uc778\ud50c\ub8e8\uc5b8\uc11c\ub4e4\uc758 \ubc18\uc751"),(0,o.kt)("h3",{id:"fireship"},"fireship"),(0,o.kt)("iframe",{class:"codepen",src:"https://www.youtube.com/embed/dWqNgzZwVJQ",title:"Bun is disrupting JavaScript land",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,o.kt)("h3",{id:"lee-robinson"},"Lee Robinson"),(0,o.kt)("iframe",{class:"codepen",src:"https://www.youtube.com/embed/z_66kDwxwBI",title:"My thoughts on Bun",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,o.kt)("h3",{id:"theo"},"Theo"),(0,o.kt)("iframe",{class:"codepen",src:"https://www.youtube.com/embed/dQkv5C-Lfkw",title:"Bun Is Better Than I Hoped",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,o.kt)("h2",{id:"bun\uc73c\ub85c-\ub9cc\ub4dc\ub294-\uc720\uc0ac-\ubc31\uc5d4\ub4dc-\uac1c\ubc1c-\uc2e4\uc804"},"bun\uc73c\ub85c \ub9cc\ub4dc\ub294 \uc720\uc0ac \ubc31\uc5d4\ub4dc \uac1c\ubc1c \uc2e4\uc804"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"brew tap oven-sh/bun\nbrew install bun\n")),(0,o.kt)("p",null,"\uba3c\uc800 \uc124\uce58\ud569\uc2dc\ub2e4. \uc800\ub294 \uc6b4\uc601\uccb4\uc81c \uc218\uc5c5 \uc644\uac15\ud558\uae30 \uc804\uae4c\uc9c0\ub294 docker \ud65c\uc6a9\uc744 \uc790\uc81c\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"bun -v\n")),(0,o.kt)("p",null,"\uc774\ub807\uac8c \ubc84\uc804\uc744 \ud655\uc778\ud574\ubd05\uc2dc\ub2e4. \uc800\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"1.0.2"),"\uac00 \ub098\uc654\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"bun init\n")),(0,o.kt)("p",null,"\uc6d0\ud558\ub294 \ud3f4\ub354\uc5d0 \ub4e4\uc5b4\uac00\uc11c \uc704 \uba85\ub839\uc73c\ub85c \ucd08\uae30\ud654 \uc124\uc815\uc744 \ud574\uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \uc800\ub294 \uc544\uc8fc \ucc3d\uc758\uc801\uc778 \uc774\ub984\uc758 ",(0,o.kt)("inlineCode",{parentName:"p"},"bun-crud"),"\ub77c\uace0 \ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc5d4\ud2b8\ub9ac\ud3ec\uc778\ud2b8\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts"),"\ub85c \uc720\uc9c0\ud588\uc2b5\ub2c8\ub2e4. \ub9c8\ubc95\uc0ac \uc120\ud0dd\uc9c0 2\uac1c\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"file-\uc77d\uace0-\uc4f0\uae30"},"file \uc77d\uace0 \uc4f0\uae30"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"console.log('Hello via Bun!');\n\nconst file = Bun.file('package.json');\n\nconst print = await file.json(); // {...}\n\nconsole.log(print);\n")),(0,o.kt)("p",null,"\uc704\ucc98\ub7fc \uc791\uc131\ud558\uace0 \uc2e4\ud589\ud574\ubd05\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"bun run index.ts\n")),(0,o.kt)("p",null,"\uadf8\ub7fc \ubcf8\uc778 ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"\ucd9c\ub825\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc774\uc81c \uc77d\uae30\ub97c \ud588\ub2e4\uba74 \uc4f0\uae30\ub97c \ud574\ubd05\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"await Bun.write(\n  'index.html',\n  `<html><body><h1>hello bun html</h1></body></html>`\n);\n")),(0,o.kt)("p",null,"\uc774\ub807\uac8c \uc791\uc131\ud558\uace0 \uc2e4\ud589\ud574\ubcf4\uba74 ",(0,o.kt)("inlineCode",{parentName:"p"},"html"),"\ud30c\uc77c\uc774 \uc0dd\uc131\ub41c \uac83\uc744 \ubcfc \uc218\uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ub098\uc911\uc5d0 htmx\ub85c \uc774\uc0c1\ud55c \uc9d3\uac70\ub9ac\ub97c \ud574\ubd05\uc2dc\ub2e4."),(0,o.kt)("h3",{id:"\uc11c\ubc84"},"\uc11c\ubc84"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"Bun.serve({\n  port: 3000,\n  fetch(request) {\n    return new Response('Hello from Bun!');\n  },\n});\n")),(0,o.kt)("p",null,"\uc704\ucc98\ub7fc \uc791\uc131\ud558\uace0 \ub2e4\uc74c \uba85\ub839\uc744 \ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"bun --hot index.ts\n")),(0,o.kt)("p",null,"\uc704\ucc98\ub7fc \uba85\ub839\ud574\uc57c \uc785\ub825\ub9c8\ub2e4 \uc11c\ubc84\uac00 HMR\ub97c \uc9c0\uc6d0\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/")," \uc5d0\uc11c get \uc694\uccad\uc744 \ud574\ubd05\uc2dc\ub2e4. ",(0,o.kt)("inlineCode",{parentName:"p"},"Hello from Bun!"),"\uc744 \ubcfc \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"sqlite-\ub0b4\uc7a5-db-\ud65c\uc6a9\ud558\uae30"},"SQLite \ub0b4\uc7a5 DB \ud65c\uc6a9\ud558\uae30"),(0,o.kt)("p",null,"\uc778\uba54\ubaa8\ub9ac DB\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"DB\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/WiseLibs/better-sqlite3"},"better-sqlite3"),"\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \ud574\ub2f9 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uba74 DB \uad6c\ud604\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,"\ud558\uc9c0\uba74 \ub354 \uc88b\uc740 ORM\uc744 \uac19\uc774 \uc0ac\uc6a9\ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc9c0\uae08 \ub2e4\ub8f0 \uc608\uc2dc\uc5d0\ub294 ORM\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\n// highlight-start\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n// highlight-end\n")),(0,o.kt)("p",null,"\uc704\ucc98\ub7fc \uc791\uc131\ud558\uba74 sqlite \ud14c\uc774\ube14\uc744 \uc815\uc758\ud55c \uac83\uc785\ub2c8\ub2e4. \uc774\uc81c \uc5ec\uae30\uc5d0 CRUD\ub97c \ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\ucc38\uace0\ub85c \ud14c\uc774\ube14\uc758 \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub294 \ub2e4\uc74c\ucc98\ub7fc \ud560 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type TodoType = {\n  id?: number;\n  title: string;\n  content: string;\n  done: boolean;\n};\n")),(0,o.kt)("p",null,"\uc774\ub7f0 \uc2a4\ud0a4\ub9c8\ub97c \ud65c\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h4",{id:"get"},"GET"),(0,o.kt)("p",null,"\ub370\uc774\ud130\ub294 \ud2b9\ubcc4\ud788 \uc5c6\uc9c0\ub9cc \uc26c\uc6cc\ubcf4\uc774\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," \uba54\uc11c\ub4dc\ubd80\ud130 \uad6c\ud604\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n\nBun.serve({\n  port: 3000,\n  fetch(request) {\n    // highlight-next-line\n    return new Response('404!');\n  },\n});\n")),(0,o.kt)("p",null,"\uba3c\uc800 \ud2b9\ubcc4\ud55c \uc124\uc815\uc744 \uc548\ud558\uba74 404\ub85c \uac00\ub3c4\ub85d \ud569\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n\nBun.serve({\n  port: 3000,\n  fetch(request) {\n    // highlight-start\n    if (request.method === 'GET' && url.pathname.split('/')[1] === 'todo') {\n      const todos = db.query('SELECT * FROM todos').all();\n      return new Response(JSON.stringify(todos), { status: 200 });\n    }\n    // highlight-end\n    return new Response('404!');\n  },\n});\n")),(0,o.kt)("p",null,"Thunder Client\ub4e0 Postmen\uc774\ub4e0 \ubcf8\uc778\uc774 \ud3b8\ud55c\uac70 \ud65c\uc6a9\ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000/todo\n")),(0,o.kt)("p",null,"\uc5ec\uae30\ub85c GET \uc694\uccad\ud558\uba74 \ube48 \ubc30\uc5f4(",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),")\uc744 \ub3cc\ub824\uc904 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h4",{id:"post"},"POST"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n\nBun.serve({\n  port: 3000,\n  fetch(request) {\n    if (request.method === 'GET' && url.pathname.split('/')[1] === 'todo') {\n      const todos = db.query('SELECT * FROM todos').all();\n      return new Response(JSON.stringify(todos), { status: 200 });\n    }\n\n    // highlight-start\n    if (request.method === 'POST' && url.pathname.split('/')[1] === 'todo') {\n      // body\ub97c \ud655\uc778\n      const { title, content, done } = await request.json<{\n        title: string;\n        content: string;\n        done: boolean;\n      }>();\n\n      // insert \ubb38\n      const insert = db.prepare(\n        'INSERT INTO todos (title, content, done) VALUES ($title, $content, $done)'\n      );\n      // insert \ucc98\ub9ac\n      insert.run({ $title: title, $content: content, $done: done });\n\n      return new Response(JSON.stringify({ title, content, done }), {\n        status: 201,\n      });\n    }\n    // highlight-end\n    return new Response('404!');\n  },\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000/todo\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "json\uc740 \uc874\uc2a8\uc774 \uc544\ub2d9\ub2c8\ub2e4.",\n  "content": "\ub354\uae00\ub77c\uc2a4 \ud06c\ub77d\ud3ec\ub4dc\ub3c4 \ud3ec\uae30\ud588\uc2b5\ub2c8\ub2e4.",\n  "done": false\n}\n')),(0,o.kt)("p",null,"\uc5ec\uae30\ub85c \uc704 json\uc744 \ub2f4\uc544\uc11c POST \uc694\uccad\ud569\ub2c8\ub2e4. ",(0,o.kt)("del",{parentName:"p"},"\ubb34\uc2a8 \ub0b4\uc6a9\uc778\uc9c0 \ub108\ubb34 \uc2e0\uacbd\uc4f0\uc9c0\ub9c8\uc138\uc694.")," \ub098\uc911\uc744 \uc704\ud574 2\ubc88 \uc694\uccad\ud558\uc138\uc694"),(0,o.kt)("p",null,"\ubc29\uae08 \ubcf4\ub0b8 json\uc744 \uc751\ub2f5\uc73c\ub85c \ubc1b\uc744 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h4",{id:"delete"},"DELETE"),(0,o.kt)("p",null,"\uc0ad\uc81c\uac00 \uc11c\uc21c\uc0c1 \ub354 \uc27d\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \uba3c\uc800\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n\nBun.serve({\n  port: 3000,\n  fetch(request) {\n    if (request.method === 'GET' && url.pathname.split('/')[1] === 'todo') {\n      const todos = db.query('SELECT * FROM todos').all();\n      return new Response(JSON.stringify(todos), { status: 200 });\n    }\n\n    if (request.method === 'POST' && url.pathname.split('/')[1] === 'todo') {\n      // body\ub97c \ud655\uc778\n      const { title, content, done } = await request.json<{\n        title: string;\n        content: string;\n        done: boolean;\n      }>();\n\n      // insert \ubb38\n      const insert = db.prepare(\n        'INSERT INTO todos (title, content, done) VALUES ($title, $content, $done)'\n      );\n      // insert \ucc98\ub9ac\n      insert.run({ $title: title, $content: content, $done: done });\n\n      return new Response(JSON.stringify({ title, content, done }), {\n        status: 201,\n      });\n    }\n\n    // highlight-start\n    if (\n      request.method === 'DELETE' &&\n      url.pathname.split('/')[1] === 'todo' &&\n      url.pathname.split('/')[2]\n    ) {\n      const [, path, id] = url.pathname.split('/');\n      const deleteTodo = db.prepare(`DELETE from todos WHERE id = ${id}`);\n      deleteTodo.run();\n      return new Response(null, { status: 204 });\n    }\n    // highlight-end\n    return new Response('404!');\n  },\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000/todo/1\n")),(0,o.kt)("p",null,"\uc704\ub85c DELETE \uc694\uccad\uc744 \ubcf4\ub0b4\uba74 \uc0ad\uc81c\ub97c \ucc98\ub9ac\ud560 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h4",{id:"update"},"UPDATE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Database } from 'bun:sqlite';\n\nconst db = Database.open(':memory:');\ndb.exec(\n  `CREATE TABLE todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, content TEXT, done INTEGER)`\n);\n\nBun.serve({\n  port: 3000,\n  fetch: async (request) => {\n    const url = new URL(request.url);\n\n    if (request.method === 'GET' && url.pathname.split('/')[1] === 'todo') {\n      const todos = db.query('SELECT * FROM todos').all();\n      return new Response(JSON.stringify(todos), { status: 200 });\n    }\n\n    if (request.method === 'POST' && url.pathname.split('/')[1] === 'todo') {\n      // body\ub97c \ud655\uc778\n      const { title, content, done } = await request.json<{\n        title: string;\n        content: string;\n        done: boolean;\n      }>();\n\n      // insert \ubb38\n      const insert = db.prepare(\n        'INSERT INTO todos (title, content, done) VALUES ($title, $content, $done)'\n      );\n      // insert \ucc98\ub9ac\n      insert.run({ $title: title, $content: content, $done: done });\n\n      return new Response(JSON.stringify({ title, content, done }), {\n        status: 201,\n      });\n    }\n\n    // highlight-start\n    if (\n      request.method === 'PATCH' &&\n      url.pathname.split('/')[1] === 'todo' &&\n      url.pathname.split('/')[2]\n    ) {\n      // body\ub97c \ud655\uc778\n      const { title, content, done } = await request.json<{\n        title: string;\n        content: string;\n        done: boolean;\n      }>();\n\n      const [, path, id] = url.pathname.split('/');\n\n      const updateTodo = db.prepare(\n        `UPDATE todos SET title = ?, content = ?, done = ?  WHERE id = ?`\n      );\n      updateTodo.run(title, content, done, id);\n\n      return new Response(JSON.stringify({ title, content, done }), {\n        status: 201,\n      });\n    }\n    // highlight-end\n\n    if (\n      request.method === 'DELETE' &&\n      url.pathname.split('/')[1] === 'todo' &&\n      url.pathname.split('/')[2]\n    ) {\n      const [, path, id] = url.pathname.split('/');\n      const deleteTodo = db.prepare(`DELETE from todos WHERE id = ${id}`);\n      deleteTodo.run();\n      return new Response(null, { status: 204 });\n    }\n\n    return new Response('404!');\n  },\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000/todo/2\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "you don\'t even know json - ThePrimeagen",\n  "content": "\uac80\uc0c9\ud558\uc9c0\ub9c8\uc138\uc694",\n  "done": true\n}\n')),(0,o.kt)("p",null,"\uc704\ub85c json\uc744 PATCH \uc694\uccad\uc73c\ub85c \ubcf4\ub0b4\uba74 \uac31\uc2e0\ub420 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc774\ub807\uac8c \uc791\uc131\ud558\uba74 \ubc31\uc5d4\ub4dc API\uac00 \uad6c\ud604\ub41c \uac83\uc785\ub2c8\ub2e4. \uc544\uc9c1 \uc11c\ubc84\uc0ac\uc774\ub4dc \ub77c\uc6b0\ud305\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ub610 \ud14c\uc2a4\ud2b8\ucf54\ub4dc\ub294 \uadc0\ucc2e\uc544\uc11c \uc548 \ub123\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc9c0\uae08 \ub2e4\uc2dc\ubcf4\uba74 \ub180\ub78d\uac8c\ub3c4 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc124\uce58 \uba85\ub839\uc744 \ud55c\ubc88\ub3c4 \uc548\ud588\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"\uc8fc\uc758\uc0ac\ud56d"},"\uc8fc\uc758\uc0ac\ud56d"),(0,o.kt)("p",null,"\ubc29\uae08\ud55c \ud83d\udc36\uc9d3\uac70\ub9ac\ub791 \ubb34\uad00\ud558\uac8c Bun\uc744 \uc0ac\uc6a9\ud560 \ub54c \ub9ac\uc2a4\ud06c\uac00 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/84452145/268552032-a3367152-db60-4826-8511-2c6e83d4cc6f.png",alt:null})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\ud604\uc7ac ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/oven-sh/bun/graphs/contributors"},"bun Repo"),"\ub97c \ud655\uc778\ud558\uba74 ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Jarred-Sumner"},"Jarred Sumner"),"\uac00 \ub300\ubd80\ubd84 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\ub9cc\uc57d\uc5d0 Jarred Sumner\uac00 \ubc84\uc2a4\uc5d0 \uce58\uc600\ub2e4\uba74 Bun\uc740 \uc720\uc9c0\ubcf4\uc218\ud558\uae30 \uc5b4\ub824\uc6cc\uc9d1\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\ubc84\uadf8\ub97c \ubc1c\uacac\ud574\ub3c4 \ubc18\uc601\ud788 \uc5c4\uccad \ub290\ub824\uc9c8 \uac83\uc785\ub2c8\ub2e4.")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Bun\uc740 VC\uc758 \uc9c0\uc6d0\uc744 \ubc1b\uc544 \uc6b4\uc601\ud569\ub2c8\ub2e4.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\ud380\ub529\uc774 \ub04a\uae30\uba74 Bun\ub3c4 \uc9c0\uc18d\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\ub300\ud45c(Jarred Sumner)\uac00 \ub300\ubd80\ubd84 \uac1c\ubc1c\ud588\uc2b5\ub2c8\ub2e4. \ud68c\uc0ac \uacbd\uc601\ud65c\ub3d9\uc73c\ub85c \ubc14\ube60\uc9c0\uba74 \uac1c\ubc1c\ud65c\ub3d9\uc744 \ub35c\ud574\uc11c \uc9c4\uc804\uc774 \ub290\ub824\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\ubb3c\ub860 Jarred Sumner\uac00 \uc704\uc784\ud558\ub294 \uac1c\ubc1c\uc790\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"window \uc6b4\uc601\uccb4\uc81c\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\uc0ac\uc2e4 \ubcc4\ub85c \uc548 \uc911\uc694\ud558\uace0 \ub098\uc911\uc5d0 \uc9c0\uc6d0\ud560 \uac83 \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\uc774\uc720\ub97c \ucd94\uce21\ud574\ubcf4\uc790\uba74 apple\uc758 webkit(\uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4) \ub54c\ubb38\uc774\ub77c\uace0 \ubd05\ub2c8\ub2e4.")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"\ucc38\uace0"),(0,o.kt)("div",{markdown:"1"},(0,o.kt)("iframe",{class:"codepen",src:"https://www.youtube.com/embed/1xoy8Q5o8ws",title:"Bun Is Better Than I Hoped",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}))),(0,o.kt)("h2",{id:"\uacb0\ub860"},"\uacb0\ub860"),(0,o.kt)("p",null,"\uc624\ub298 \uc800\ub141\uc740 \ub524\uc12c\uc774 \ub561\uae41\ub2c8\ub2e4."))}c.isMDXComponent=!0}}]);