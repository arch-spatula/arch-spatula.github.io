"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[57602],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>k});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=r.createContext({}),i=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},p=function(n){var e=i(n.components);return r.createElement(s.Provider,{value:e},n.children)},c="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,s=n.parentName,p=u(n,["components","mdxType","originalType","parentName"]),c=i(t),d=a,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return t?r.createElement(k,o(o({ref:e},p),{},{components:t})):r.createElement(k,o({ref:e},p))}));function k(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,o=new Array(l);o[0]=d;var u={};for(var s in e)hasOwnProperty.call(e,s)&&(u[s]=e[s]);u.originalType=n,u[c]="string"==typeof n?n:a,o[1]=u;for(var i=2;i<l;i++)o[i]=t[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},18629:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>i});var r=t(87462),a=(t(67294),t(3905));const l={sidebar_position:5,description:"\uad6c\ud604",tags:["\uad6c\ud604","implementation","\ubb38\uc81c \uc720\ud615"]},o="\uad6c\ud604",u={unversionedId:"algorithms-and-data-structures/implementation",id:"algorithms-and-data-structures/implementation",title:"\uad6c\ud604",description:"\uad6c\ud604",source:"@site/diy-cs/algorithms-and-data-structures/implementation.md",sourceDirName:"algorithms-and-data-structures",slug:"/algorithms-and-data-structures/implementation",permalink:"/diy-cs/algorithms-and-data-structures/implementation",draft:!1,tags:[{label:"\uad6c\ud604",permalink:"/diy-cs/tags/\uad6c\ud604"},{label:"implementation",permalink:"/diy-cs/tags/implementation"},{label:"\ubb38\uc81c \uc720\ud615",permalink:"/diy-cs/tags/\ubb38\uc81c-\uc720\ud615"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"\uad6c\ud604",tags:["\uad6c\ud604","implementation","\ubb38\uc81c \uc720\ud615"]},sidebar:"tutorialSidebar",previous:{title:"\ube48\ub3c4\uc218 \uc138\uae30",permalink:"/diy-cs/algorithms-and-data-structures/frequency-counter"},next:{title:"\uadf8\ub9ac\ub514",permalink:"/diy-cs/algorithms-and-data-structures/greedy"}},s={},i=[{value:"2\ucc28\uc6d0 \ubc30\uc5f4",id:"2\ucc28\uc6d0-\ubc30\uc5f4",level:2},{value:"n^2 \ubc30\uc5f4 \uc790\ub974\uae30",id:"n2-\ubc30\uc5f4-\uc790\ub974\uae30",level:3},{value:"\ud589\ub82c\uc758 \uacf1\uc148",id:"\ud589\ub82c\uc758-\uacf1\uc148",level:3},{value:"\ucd5c\uc18c\uacf5\ubc30\uc218 \ucd5c\ub300\uacf5\uc57d\uc218",id:"\ucd5c\uc18c\uacf5\ubc30\uc218-\ucd5c\ub300\uacf5\uc57d\uc218",level:2},{value:"N\uac1c\uc758 \ucd5c\uc18c\uacf5\ubc30\uc218",id:"n\uac1c\uc758-\ucd5c\uc18c\uacf5\ubc30\uc218",level:3},{value:"\ubc30\uc5f4 \uc870\uc791",id:"\ubc30\uc5f4-\uc870\uc791",level:2},{value:"K\ubc88\uc9f8\uc218",id:"k\ubc88\uc9f8\uc218",level:3},{value:"\ubb38\uc790\uc5f4 \uc870\uc791",id:"\ubb38\uc790\uc5f4-\uc870\uc791",level:2},{value:"\ub2e4\ud56d\uc2dd \ub354\ud558\uae30",id:"\ub2e4\ud56d\uc2dd-\ub354\ud558\uae30",level:3}],p={toc:i},c="wrapper";function m(n){let{components:e,...t}=n;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\uad6c\ud604"},"\uad6c\ud604"),(0,a.kt)("p",null,"\uc0ac\uc2e4 \ubd84\ub958\ud558\uae30 \uc560\ub9e4\ud55c \uc54c\uace0\ub9ac\uc998\uc744 \uc5ec\uae30\uc5d0 \uc77c\ub2e8 \ucd94\uac00\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"2\ucc28\uc6d0-\ubc30\uc5f4"},"2\ucc28\uc6d0 \ubc30\uc5f4"),(0,a.kt)("h3",{id:"n2-\ubc30\uc5f4-\uc790\ub974\uae30"},"n^2 \ubc30\uc5f4 \uc790\ub974\uae30"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/87390"},"n^2 \ubc30\uc5f4 \uc790\ub974\uae30")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// n    left    right   result\n// 3    2       5       [3,2,2,3]\n// 4    7       14    [4,3,3,3,4,4,4,4]\n\ndescribe('n^2 \ubc30\uc5f4 \uc790\ub974\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution(3, 2, 5)).toEqual([3, 2, 2, 3]);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution(4, 7, 14)).toEqual([4, 3, 3, 3, 4, 4, 4, 4]);\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 09\uc6d4 02\uc77c 1\ucc28 \uc2dc\ub3c4"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} n\n * @param {number} left\n * @param {number} right\n * @returns {number[]}\n */\nfunction solution(n, left, right) {\n  return squareArr(n)\n    .flat()\n    .slice(left, right + 1);\n}\n\n/**\n * @param {number} n\n * @returns {number[][]}\n */\nexport function squareArr(n) {\n  const result = [];\n  for (let i = 1; i <= n; i++) {\n    const row = [];\n    for (let j = 1; j <= n; j++) row.push(Math.max(i, j));\n    result.push(row);\n  }\n  return result;\n}\n\nexport default solution;\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/questions/53856"},"\ud78c\ud2b8\uac00 \ud544\uc694\ud558\uc2e0 \ubd84\uc740 \ubd10\uc8fc\uc138\uc694")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"n\uc774 3\uc778 \uacbd\uc6b0 123,223,333\uc774\uace0 n\uc774 4\uc778 \uacbd\uc6b0 1234,2234,3334,4444\uac00 \ub429\ub2c8\ub2e4. \uc5ec\uae30\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub294 \uaddc\uce59\uc131\uc740 \uc678\ubd80 \ubc30\uc5f4 \uc778\ub371\uc2a4 \uac12+1(\uc774\ud558 i)\uc758 \uac12\uc774 i-1\ubc88 \uc778\ub371\uc2a4\uc758 \ub0b4\ubd80 \ubc30\uc5f4\uc5d0\uc11c i\uac1c\ub9cc\ud07c \ub4e4\uc5b4\uac00\uace0"),(0,a.kt)("p",{parentName:"blockquote"},"\uadf8 \ubc18\ubcf5\uc774 \ub05d\ub098\uace0 \ub09c \ub2e4\uc74c \ub0b4\ubd80 \ubc30\uc5f4\uc5d0\uc11c \ube44\uc5b4 \uc788\ub294 \ubd80\ubd84\uc740 \ube48 \uc778\ub371\uc2a4 \uc774\uc804\uc758 \uc778\ub371\uc2a4 \uac12\uc5d0\uc11c +1\uc744 \ud558\uc5ec \ucc44\uc6cc\ub123\ub294\ub2e4 \uc785\ub2c8\ub2e4."),(0,a.kt)("p",{parentName:"blockquote"},"\uc774\ub97c \uc54c\uba74 \uad73\uc774 \ubaa8\ub4e0 \ud589\uacfc \uc5f4\uc5d0 \uac12\uc744 \ub123\uc9c0 \uc54a\uc544\ub3c4 \uba87 \ud589\uc5d0\uc11c \uc5b4\ub5a4 \uc2dd\uc73c\ub85c \ubc30\uc5f4\ub420\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4 \ubaa8\ub4e0 \ud589\uacfc \uc5f4\uc5d0 \uac12\uc744 \ub123\uc73c\uba74 \uba54\ubaa8\ub9ac\uac00 \ucd08\uacfc\ub418\uac70\ub4e0\uc694 \uc81c\uac00 \ud574\ubd10\uc11c \uc555\ub2c8\ub2e4."),(0,a.kt)("p",{parentName:"blockquote"},"\uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 left~right\uae4c\uc9c0\uc758 \uac12\uc5d0 \ud574\ub2f9\ud558\ub294 \uc778\ub371\uc2a4\ub97c \ucc3e\uc73c\uc2dc\uba74 \ub429\ub2c8\ub2e4 \uccab \ud589\uc740 left/n+1\uc774\uace0 \uccab \uc5f4\uc740 left%n+1\uc774 \ub418\ub2c8 \ud574\ub2f9 \ud589\uc5d0\uc11c \ub098\uc62c \ubc30\uc5f4\uc744 \uadf8\ub54c\uadf8\ub54c \ub9cc\ub4e4\uc5b4\uc11c \ud574\ub2f9 \uc5f4\uc758 \uac12\uc744 \ucc3e\uc544\uc8fc\uc2dc\uba74 \ubaa8\ub4e0 \ud589\uacfc \uc5f4\uc744 \ub2e4 \ub9cc\ub4e4\uc9c0 \uc54a\uc544\ub3c4 \ubb38\uc81c\ub97c \ud480 \uc218 \uc788\uc2b5\ub2c8\ub2e4"),(0,a.kt)("p",{parentName:"blockquote"},"\uba38\ub9ac\ub85c\ub294 \uc544\ub294\ub370 \uae00\ub85c \uc27d\uac8c \ud480\uc5b4\ub0b4\ub824\uace0 \ud558\ub2c8 \uc5b4\ub835\ub124\uc694 \uae00\uc774 \ubd80\uc871\ud574\uc11c \uc774\ud574\uac00 \uc548\ub418\ub294 \ubd80\ubd84\uc740 \ub2e4\ub978 \ubd84\ub4e4\uc774 \uc368\ub193\uc740 \ud78c\ud2b8\ub97c \ubcf4\uc2dc\uba74 \uc27d\uac8c \uc774\ud574\ub420 \uac83 \uac19\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\ud78c\ud2b8\ub97c \ubcf4\uba74 \uacf5\uac04\ubcf5\uc7a1\uc131 \ubb38\uc81c\ub97c \uac16\uace0 \uc788\ub2e4\uace0 \ud569\ub2c8\ub2e4. iot \ub514\ubc14\uc774\uc2a4\uc5d0\uc11c \ud504\ub85c\uadf8\ub798\ubc0d\ud558\ub294 \uac83\ucc98\ub7fc \uba54\ubaa8\ub9ac \uc0ac\uc774\uc988\ub97c \uc758\uc2dd\ud574\uc57c \ud558\ub098\ubd05\ub2c8\ub2e4."))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 09\uc6d4 02\uc77c 2\ucc28 \uc2dc\ub3c4"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/questions/48897"},"\uc815~~~\ub9d0 \ub2e8\ud3b8\uc801\uc778 \ud78c\ud2b8 (\ud480\uc774x)")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\ubaab\uacfc \ub098\uba38\uc9c0")),(0,a.kt)("p",null,"\uc774 \ud78c\ud2b8\uac00 \uc0c1\ub2f9\ud788 \uc720\uc6a9\ud588\uc2b5\ub2c8\ub2e4. i, j \ud589\ub82c\uc744 \ud45c\ud604\ud558\ub294\ub370 \ubaab\uacfc \ub098\uba38\uc9c0\ub85c \ud45c\ud604\ud560 \uac83\uc774\ub77c\ub294 \uc0dd\uac01\uc740 \ubabb\ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} n\n * @param {number} left\n * @param {number} right\n * @returns {number[]}\n */\nfunction solution(n, left, right) {\n  return Array.from({ length: right - left + 1 }, (_, idx) => {\n    const [i, j] = [Math.floor((idx + left) / n) + 1, ((idx + left) % n) + 1];\n    return Math.max(i, j);\n  });\n}\n\nexport default solution;\n")),(0,a.kt)("p",null,"\uacb0\uad6d\uc5d0\ub294 \uc704\ucc98\ub7fc \ud480\uc5c8\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("h3",{id:"\ud589\ub82c\uc758-\uacf1\uc148"},"\ud589\ub82c\uc758 \uacf1\uc148"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/12949"},"\ud589\ub82c\uc758 \uacf1\uc148")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution, { extractCol, extractRow, multiply } from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// arr1 arr2    return\n// [[1, 4], [3, 2], [4, 1]] [[3, 3], [3, 3]]    [[15, 15], [15, 15], [15, 15]]\n// [[2, 3, 2], [4, 2, 4], [3, 1, 4]]    [[5, 4, 3], [2, 4, 1], [3, 1, 1]]   [[22, 22, 11], [36, 28, 18], [29, 20, 14]]\n\ndescribe('n^2 \ubc30\uc5f4 \uc790\ub974\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(\n        [\n          [1, 4],\n          [3, 2],\n          [4, 1],\n        ],\n        [\n          [3, 3],\n          [3, 3],\n        ]\n      )\n    ).toEqual([\n      [15, 15],\n      [15, 15],\n      [15, 15],\n    ]);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(\n      solution(\n        [\n          [2, 3, 2],\n          [4, 2, 4],\n          [3, 1, 4],\n        ],\n        [\n          [5, 4, 3],\n          [2, 4, 1],\n          [3, 1, 1],\n        ]\n      )\n    ).toEqual([\n      [22, 22, 11],\n      [36, 28, 18],\n      [29, 20, 14],\n    ]);\n  });\n  test('\uac10\ucd95', () => {\n    expect(solution([[1, 2]], [[3], [4]])).toEqual([[3 * 1 + 2 * 4]]);\n  });\n  test('\ud655\uc7a5', () => {\n    expect(solution([[1], [2]], [[3, 4]])).toEqual([\n      [1 * 3, 1 * 4],\n      [2 * 3, 2 * 4],\n    ]);\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\ud65c\uc6a9\ud574\ubcfc \uc218 \uc788\ub294 \ucd94\uac00 \ub2e8\uc704\ud14c\uc2a4\ud2b8"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"describe('helper', () => {\n  test('row', () => {\n    expect(\n      extractRow(\n        [\n          [1, 4],\n          [3, 2],\n          [4, 1],\n        ],\n        0\n      )\n    ).toEqual([1, 4]);\n  });\n  test('col', () => {\n    expect(\n      extractCol(\n        [\n          [1, 4],\n          [3, 2],\n          [4, 1],\n        ],\n        0\n      )\n    ).toEqual([1, 3, 4]);\n  });\n  test('multiply', () => {\n    expect(multiply([1, 2, 3], [1, 2, 3])).toBe(1 * 1 + 2 * 2 + 3 * 3);\n  });\n});\n")))),(0,a.kt)("hr",null),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 09\uc6d4 14\uc77c \ud480\uc774"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[][]} arr1\n * @param {number[][]} arr2\n * @returns {number[][]}\n */\nfunction solution(arr1, arr2) {\n  const result = [];\n\n  for (let i = 0; i < arr1.length; i++) {\n    const row = [];\n    for (let j = 0; j < arr2[0].length; j++) {\n      row.push(multiply(extractRow(arr1, i), extractCol(arr2, j)));\n    }\n    result.push(row);\n  }\n\n  return result;\n}\n\n/**\n * @param {number[][]} arr\n * @param {number} idx\n * @returns {number[]}\n */\nfunction extractRow(arr, idx) {\n  return arr[idx];\n}\n\n/**\n * @param {number[][]} arr\n * @param {number} idx\n * @returns {number[]}\n */\nfunction extractCol(arr, idx) {\n  const result = [];\n  for (let i = 0; i < arr.length; i++) {\n    result.push(arr[i][idx]);\n  }\n  return result;\n}\n\n/**\n * @param {number[]} arr1\n * @param {number[]} arr2\n * @returns {number}\n */\nfunction multiply(arr1, arr2) {\n  let sum = 0;\n  for (let i = 0; i < arr1.length; i++) {\n    sum += arr1[i] * arr2[i];\n  }\n  return sum;\n}\n\nexport default solution;\n\nexport { extractCol, extractRow, multiply };\n")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ub2e8\uc704\ud14c\uc2a4\ud2b8\uc5d0 \ucd94\ucd9c\ub85c \ubb38\uc81c\ub97c \ud480\uc5c8\uc2b5\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc131\ub2a5\uc774 \uc544\uc8fc \ub098\uc060 \uac83\uc774\ub77c\ub294 \uc0dd\uac01\uc774 \ub4ed\ub2c8\ub2e4.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\ubaa8\ubc94\ub2f5\uc548"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function solution(arr1, arr2) {\n  return arr1.map((row) =>\n    arr2[0].map((x, y) => row.reduce((a, b, c) => a + b * arr2[c][y], 0))\n  );\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function productMatrix(A, B) {\n    return A.map(function(row) {\n        return row.map(function(_, i) {\n            return row.reduce(function(sum, cell, j) {\n                return sum + cell * B[j][i];\n            }, 0);\n        });\n    });\n")))),(0,a.kt)("p",null,"\uc774\ub807\uac8c \ubcf8\uc9c8\uc744 \ubcf4\uba74 \uc774 \ud480\uc774\uac00 \uc801\uc808\ud569\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"\ucd5c\uc18c\uacf5\ubc30\uc218-\ucd5c\ub300\uacf5\uc57d\uc218"},"\ucd5c\uc18c\uacf5\ubc30\uc218 \ucd5c\ub300\uacf5\uc57d\uc218"),(0,a.kt)("p",null,"\ucd5c\uc18c\uacf5\ubc30\uc218\uc640 \ucd5c\ub300\uacf5\uc57d\uc218\ub294 \ub300\uc218\uc801\uc73c\ub85c \ud45c\ud604\ud558\uae30\ub294 \uc5b4\ub824\uc6b4 \ubb38\uc81c\uc785\ub2c8\ub2e4. \uc54c\uace0\ub9ac\uc998\ucc98\ub7fc \ud480\uc774\ud558\ub294 \uc808\ucc28\ud45c\ud604\ud558\ub294 \uc77c\ubc18\uc801\uc778 \ubb38\uc81c\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc218\ud559\uc801 \uc131\uc9c8\uc744 \uc774\ud574\ud558\ub294 \uac83\ub3c4 \uc911\uc694\ud558\uc9c0\ub9cc \ubb38\uc81c\uc758 \uc694\uad6c\uc0ac\ud56d\uc744 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \ud45c\ud604\ud558\ub294 \uac83\uc774 \ub354 \uc911\uc694\ud569\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"n\uac1c\uc758-\ucd5c\uc18c\uacf5\ubc30\uc218"},"N\uac1c\uc758 \ucd5c\uc18c\uacf5\ubc30\uc218"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/12953"},"N\uac1c\uc758 \ucd5c\uc18c\uacf5\ubc30\uc218 - \ud504\ub85c\uadf8\ub798\uba38\uc2a4")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} arr\n * @returns {number}\n */\nfunction solution(arr) {\n  const multiple = [];\n  let copyArr = arr.slice();\n  let div = 2;\n\n  while (div <= Math.max(...copyArr)) {\n    if (copyArr.every((num) => num % div === 0)) {\n      copyArr = copyArr.map((num) => parseInt(num / div));\n      multiple.push(div);\n      div = 2;\n    } else {\n      div += 1;\n    }\n  }\n\n  return copyArr.concat(multiple).reduce((acc, curr) => acc * curr);\n}\n\nexport default solution;\n")),(0,a.kt)("p",null,"\uc6d0\ub798 \uc2dc\ub3c4\ud55c \uc815\ub2f5"),(0,a.kt)("p",null,"\ucd5c\uc18c \uacf5\ubc30\uc218\ub97c \uad6c\ud558\uae30 \uc704\ud574 \uc218\ud559\uc801\uc73c\ub85c \ud45c\ub97c \ub9cc\ub4e4\uace0 \ub098\ub217\uc148\ud558\ub294 \ubc29\uc2dd\uc744 \ud65c\uc6a9\ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc18c\uc218\uac00 \uc11e\uc5ec\uc788\uace0 \uc774 \uc18c\uc218\ub97c \uc81c\uc678\ud558\ub294 \ubc29\ubc95\uc744 \uc0dd\uac01\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// arr        result\n// [2,6,8,14]   168\n// [1,2,3]    6\n\ndescribe('N\uac1c\uc758 \ucd5c\uc18c\uacf5\ubc30\uc218', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution([2, 6, 8, 14])).toBe(168);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution([1, 2, 3])).toBe(6);\n  });\n  test('\uc608\uc81c 3', () => {\n    expect(solution([2, 7])).toBe(14);\n  });\n  test('\uc608\uc81c 4', () => {\n    expect(solution([12, 32, 45, 67, 72])).toBe(96480);\n  });\n  test('\uc608\uc81c 5', () => {\n    expect(solution([17, 34])).toBe(34);\n  });\n  test('\uc608\uc81c 6', () => {\n    expect(solution([4, 4])).toBe(4);\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 08\uc6d4 28\uc77c"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} arr\n * @returns {number}\n */\n\nfunction solution(arr) {\n  arr.sort((a, b) => b - a);\n  let result,\n    isDivide = false,\n    count = arr[0];\n\n  while (!isDivide) {\n    isDivide = arr.every((num) => count % num === 0);\n    if (isDivide) {\n      result = count;\n      break;\n    }\n    count += 1;\n  }\n  return result;\n}\n\nexport default solution;\n")),(0,a.kt)("p",null,"\uc815\ub2f5 \ucf54\ub4dc\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4."))),(0,a.kt)("h2",{id:"\ubc30\uc5f4-\uc870\uc791"},"\ubc30\uc5f4 \uc870\uc791"),(0,a.kt)("h3",{id:"k\ubc88\uc9f8\uc218"},"K\ubc88\uc9f8\uc218"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} array,\n * @param {[number, number, number][]} commands\n * @returns {number[]}\n */\nfunction solution(array, commands) {\n  var answer = [];\n  return answer;\n}\nexport default solution;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// array                    commands                            return\n// [1, 5, 2, 6, 3, 7, 4]    [[2, 5, 3], [4, 4, 1], [1, 7, 3]]   [5, 6, 3]\n\ndescribe('K\ubc88\uc9f8\uc218', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(\n        [1, 5, 2, 6, 3, 7, 4],\n        [\n          [2, 5, 3],\n          [4, 4, 1],\n          [1, 7, 3],\n        ]\n      )\n    ).toBe([5, 6, 3]);\n  });\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} array,\n * @param {[number, number, number][]} commands\n * @returns {number[]}\n */\nfunction solution(array, commands) {\n  const result = [];\n  commands.forEach((elem) => {\n    const [i, j, k] = elem;\n\n    result.push(array.slice(i - 1, j).sort((a, b) => a - b)[k - 1]);\n  });\n  return result;\n}\n\nexport default solution;\n")),(0,a.kt)("h2",{id:"\ubb38\uc790\uc5f4-\uc870\uc791"},"\ubb38\uc790\uc5f4 \uc870\uc791"),(0,a.kt)("p",null,"\ubb38\uc790\uc5f4 \uc870\uc791\uc740 \uc77c\uc0c1\uc801\uc73c\ub85c \uc790\uc8fc\ud569\ub2c8\ub2e4. \ub610 \ucef4\ud30c\uc77c\ub7ec\ub9cc\ub4e4 \ub54c \uae30\ucd08\uac00 \ub418\ub294 \ubd80\ubd84\uc785\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"\ub2e4\ud56d\uc2dd-\ub354\ud558\uae30"},"\ub2e4\ud56d\uc2dd \ub354\ud558\uae30"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {string} polynomial\n * @returns {string}\n */\nfunction solution(polynomial) {\n  var answer = '';\n  return answer;\n}\n\nexport default solution;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// polynomial       result\n// \"3x + 7 + x\"   \"4x + 7\"\n// \"x + x + x\"    \"3x\"\n\ndescribe('\ub2e4\ud56d\uc2dd \ub354\ud558\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution('3x + 7 + x')).toBe('4x + 7');\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution('x + x + x')).toBe('3x');\n  });\n  test('\uc608\uc81c 3', () => {\n    expect(solution('x')).toBe('x');\n  });\n  test('\uc608\uc81c 4', () => {\n    expect(solution('1')).toBe('1');\n  });\n  test('\uc608\uc81c 5', () => {\n    expect(solution('1 + x')).toBe('x + 1');\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\uc800\uc758 \uc815\ub2f5"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {string} polynomial \uc815\uc218, \uacf5\ubc31, \u2018x\u2019, \u2018+'\n * @returns {string}\n */\nfunction solution(polynomial) {\n  let x = 0;\n  let num = 0;\n  const parsePolynomial = polynomial.split(' ').filter((char) => char !== '+');\n\n  for (let i = 0; i < parsePolynomial.length; i++) {\n    const char = parsePolynomial[i];\n    if (char.includes('x')) {\n      // \uacc4\uc218\n      const coefficient = char.replace('x', '')\n        ? parseInt(char.replace('x', ''))\n        : 1;\n      x += coefficient;\n    } else {\n      num += parseInt(char);\n    }\n  }\n\n  let result = `${x}x + ${num}`;\n\n  if (x === 1) result = result.slice(1);\n  if (x === 0) result = result.split(' ').slice(2).join('');\n  if (num === 0) result = result.split(' ').slice(0, 1).join('');\n\n  return result;\n}\n\nexport default solution;\n")))))}m.isMDXComponent=!0}}]);