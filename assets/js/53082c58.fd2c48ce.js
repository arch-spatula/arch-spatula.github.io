"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[80717],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,g=c["".concat(i,".").concat(m)]||c[m]||d[m]||s;return t?r.createElement(g,l(l({ref:n},p),{},{components:t})):r.createElement(g,l({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,l=new Array(s);l[0]=m;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<s;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const s={sidebar_position:14,description:"\ubb38\uc790\uc5f4 \uc870\uc791",tags:["\uc790\ub8cc\uad6c\uc870","\ubb38\uc81c\uc720\ud615","\ubb38\uc790\uc5f4 \uc870\uc791"]},l="\ubb38\uc790\uc5f4 \uc870\uc791",o={unversionedId:"algorithms-and-data-structures/string-manipulation",id:"algorithms-and-data-structures/string-manipulation",title:"\ubb38\uc790\uc5f4 \uc870\uc791",description:"\ubb38\uc790\uc5f4 \uc870\uc791",source:"@site/diy-cs/algorithms-and-data-structures/string-manipulation.md",sourceDirName:"algorithms-and-data-structures",slug:"/algorithms-and-data-structures/string-manipulation",permalink:"/diy-cs/algorithms-and-data-structures/string-manipulation",draft:!1,tags:[{label:"\uc790\ub8cc\uad6c\uc870",permalink:"/diy-cs/tags/\uc790\ub8cc\uad6c\uc870"},{label:"\ubb38\uc81c\uc720\ud615",permalink:"/diy-cs/tags/\ubb38\uc81c\uc720\ud615"},{label:"\ubb38\uc790\uc5f4 \uc870\uc791",permalink:"/diy-cs/tags/\ubb38\uc790\uc5f4-\uc870\uc791"}],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14,description:"\ubb38\uc790\uc5f4 \uc870\uc791",tags:["\uc790\ub8cc\uad6c\uc870","\ubb38\uc81c\uc720\ud615","\ubb38\uc790\uc5f4 \uc870\uc791"]},sidebar:"tutorialSidebar",previous:{title:"\uc218\ud559(Math)",permalink:"/diy-cs/algorithms-and-data-structures/math"}},i={},u=[{value:"\ud29c\ud50c",id:"\ud29c\ud50c",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\ubb38\uc790\uc5f4-\uc870\uc791"},"\ubb38\uc790\uc5f4 \uc870\uc791"),(0,a.kt)("h2",{id:"\ud29c\ud50c"},"\ud29c\ud50c"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/64065"},"\ud29c\ud50c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {string} s\n * @returns {number[]}\n */\nfunction solution(s) {\n  let result = [];\n  return result;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution, { parseTuple, splitNestedTuple } from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// s                                  result\n// \"{{2},{2,1},{2,1,3},{2,1,3,4}}\"  [2, 1, 3, 4]\n// \"{{1,2,3},{2,1},{1,2,4,3},{2}}\"  [2, 1, 3, 4]\n// \"{{20,111},{111}}\"                 [111, 20]\n// \"{{123}}\"                          [123]\n// \"{{4,2,3},{3},{2,3,4,1},{2,3}}\"  [3, 2, 4, 1]\n\ndescribe('\ud29c\ud50c', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution('{{2},{2,1},{2,1,3},{2,1,3,4}}')).toEqual([2, 1, 3, 4]);\n  });\n\n  test('\uc608\uc81c 2', () => {\n    expect(solution('{{1,2,3},{2,1},{1,2,4,3},{2}}')).toEqual([2, 1, 3, 4]);\n  });\n\n  test('\uc608\uc81c 3', () => {\n    expect(solution('{{20,111},{111}}')).toEqual([111, 20]);\n  });\n\n  test('\uc608\uc81c 4', () => {\n    expect(solution('{{123}}')).toEqual([123]);\n  });\n\n  test('\uc608\uc81c 5', () => {\n    expect(solution('{{4,2,3},{3},{2,3,4,1},{2,3}}')).toEqual([3, 2, 4, 1]);\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 09\uc6d4 19\uc77c"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {string} s\n * @returns {number[]}\n */\nfunction solution(s) {\n  /** @type {string[]} */\n  let parsedTuple = [];\n  let pushFlag = false;\n  for (let i = 0; i < s.slice(1, s.length - 1).length; i++) {\n    if (s[i] === '{') {\n      pushFlag = true;\n      parsedTuple.push('');\n      continue;\n    }\n    if (s[i] === '}') {\n      pushFlag = false;\n      continue;\n    }\n    if (pushFlag) parsedTuple[parsedTuple.length - 1] += s[i];\n  }\n\n  parsedTuple = parsedTuple\n    .map((char) => char.split(',').map((char) => parseInt(char)))\n    .slice(1)\n    .sort((a, b) => a.length - b.length);\n\n  let prev = [];\n  const result = Array.from({ length: parsedTuple.length }, (_, idx) => {\n    const newElem = parsedTuple[idx].filter((elem) => !prev.includes(elem))[0];\n    prev = parsedTuple[idx];\n    return newElem;\n  });\n\n  return result;\n}\n\nexport default solution;\n")),(0,a.kt)("p",null,"\uc704\ub294 \uc800\uc758 \ub2f5\uc548\uc785\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function solution(s) {\n  return JSON.parse(s.replace(/{/g, '[').replace(/}/g, ']'))\n    .sort((a, b) => a.length - b.length)\n    .reduce((arr, v, n) => {\n      if (n) {\n        return arr.concat(v.filter((f) => !arr.includes(f)));\n      }\n      return v;\n    }, []);\n}\n")),(0,a.kt)("p",null,"\uc704\ub294 \ubaa8\ubc94\ub2f5\uc548\uc785\ub2c8\ub2e4."))))}d.isMDXComponent=!0}}]);