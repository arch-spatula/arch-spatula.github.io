"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[96840],{17426:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=t(85893),s=t(11151);const o={sidebar_position:4,description:"\ube48\ub3c4\uc218 \uc138\uae30",tags:["\ube48\ub3c4\uc218 \uc138\uae30","frequency counter","\ubb38\uc81c \uc720\ud615"]},i="\ube48\ub3c4\uc218 \uc138\uae30",a={id:"algorithms-and-data-structures/frequency-counter",title:"\ube48\ub3c4\uc218 \uc138\uae30",description:"\ube48\ub3c4\uc218 \uc138\uae30",source:"@site/diy-cs/algorithms-and-data-structures/frequency-counter.md",sourceDirName:"algorithms-and-data-structures",slug:"/algorithms-and-data-structures/frequency-counter",permalink:"/diy-cs/algorithms-and-data-structures/frequency-counter",draft:!1,unlisted:!1,tags:[{label:"\ube48\ub3c4\uc218 \uc138\uae30",permalink:"/diy-cs/tags/\ube48\ub3c4\uc218-\uc138\uae30"},{label:"frequency counter",permalink:"/diy-cs/tags/frequency-counter"},{label:"\ubb38\uc81c \uc720\ud615",permalink:"/diy-cs/tags/\ubb38\uc81c-\uc720\ud615"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"\ube48\ub3c4\uc218 \uc138\uae30",tags:["\ube48\ub3c4\uc218 \uc138\uae30","frequency counter","\ubb38\uc81c \uc720\ud615"]},sidebar:"tutorialSidebar",previous:{title:"\ubc31\ud2b8\ub808\ud0b9",permalink:"/diy-cs/algorithms-and-data-structures/backTrack"},next:{title:"\uad6c\ud604",permalink:"/diy-cs/algorithms-and-data-structures/implementation"}},l={},c=[{value:"\ucd5c\ube48\uac12 \uad6c\ud558\uae30",id:"\ucd5c\ube48\uac12-\uad6c\ud558\uae30",level:2},{value:"[1\ucc28] \ub274\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub9c1",id:"1\ucc28-\ub274\uc2a4-\ud074\ub7ec\uc2a4\ud130\ub9c1",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"\ube48\ub3c4\uc218-\uc138\uae30",children:"\ube48\ub3c4\uc218 \uc138\uae30"}),"\n",(0,r.jsxs)(n.p,{children:["\ube48\ub3c4\uc218 \uc138\uae30(frequency counter)\ub294 \ub4f1\uc7a5 \ud69f\uc218\ub97c \uae30\ub85d\ud558\ub294 \ubb38\uc81c \uc720\ud615\uc785\ub2c8\ub2e4. ",(0,r.jsx)(n.code,{children:"Map"})," \ubb38\uc81c\ub791 \uacb9\uce58\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4."]}),"\n",(0,r.jsx)(n.h2,{id:"\ucd5c\ube48\uac12-\uad6c\ud558\uae30",children:"\ucd5c\ube48\uac12 \uad6c\ud558\uae30"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://school.programmers.co.kr/learn/courses/30/lessons/120812",children:"\ucd5c\ube48\uac12 \uad6c\ud558\uae30 - \ud504\ub85c\uadf8\ub798\uba38\uc2a4"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[]} array\n * @returns {number}\n */\nfunction solution(array) {\n  var answer = 0;\n  return answer;\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// array\t            result\n// [1, 2, 3, 3, 3, 4]\t3\n// [1, 1, 2, 2]\t      -1\n// [1]\t              1\n\ndescribe('\ucd5c\ube48\uac12 \uad6c\ud558\uae30', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution([1, 2, 3, 3, 3, 4])).toBe(3);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution([1, 1, 2, 2])).toBe(-1);\n  });\n  test('\uc608\uc81c 3', () => {\n    expect(solution([1])).toBe(1);\n  });\n});\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"2023\ub144 09\uc6d4 01\uc77c"}),(0,r.jsx)("div",{markdown:"1",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[]} array\n * @returns {number}\n */\nfunction solution(array) {\n  const memo = new Map();\n\n  array.forEach((elem) => {\n    if (memo.get(elem) === undefined) memo.set(elem, 1);\n    else memo.set(elem, memo.get(elem) + 1);\n  });\n\n  let modeCount = 0;\n  let modeValue = 0;\n  memo.forEach((value, key) => {\n    if (modeCount < value) {\n      modeValue = key;\n      modeCount = value;\n    }\n  });\n\n  let maxDouble = 0;\n  memo.forEach((value, key) => {\n    if (value === modeCount) maxDouble += 1;\n  });\n  if (maxDouble >= 2) return -1;\n\n  return modeValue;\n}\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"1\ucc28-\ub274\uc2a4-\ud074\ub7ec\uc2a4\ud130\ub9c1",children:"[1\ucc28] \ub274\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub9c1"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://school.programmers.co.kr/learn/courses/30/lessons/17677",children:"[1\ucc28] \ub274\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub9c1"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function solution(str1, str2) {\n  var answer = 0;\n  return answer;\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import solution, { getIntersection, getUnion } from './playground';\nimport { test, expect, describe } from 'vitest';\n\n// str1\t      str2\t      answer\n// FRANCE\t    french\t    16384\n// handshake\tshake hands\t65536\n// aa1+aa2\t  AAAA12\t    43690\n// E=M*C^2\t  e=m*c^2\t    65536\n\ndescribe('\ub274\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub9c1', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(solution('FRANCE', 'french')).toBe(16384);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(solution('handshake', 'shake hands')).toBe(65536);\n  });\n  test('\uc608\uc81c 3', () => {\n    expect(solution('aa1+aa2', 'AAAA12')).toBe(43690);\n  });\n  test('\uc608\uc81c 4', () => {\n    expect(solution('E=M*C^2', 'e=m*c^2')).toBe(65536);\n  });\n});\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"\ucd94\uac00 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc"}),(0,r.jsx)("div",{markdown:"1",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"describe('helper', () => {\n  test('getUnion - 1', () => {\n    expect(\n      getUnion(['fr', 'ra', 'an', 'nc', 'ce'], ['fr', 're', 'en', 'nc', 'ch'])\n    ).toEqual(['fr', 'ra', 'an', 'nc', 'ce', 're', 'en', 'ch']);\n  });\n  test('getUnion - 2', () => {\n    expect(getUnion(['aa', 'aa'], ['aa', 'aa', 'aa'])).toEqual([\n      'aa',\n      'aa',\n      'aa',\n    ]);\n  });\n  test('getIntersection - 1', () => {\n    expect(\n      getIntersection(\n        ['FR', 'RA', 'AN', 'NC', 'CE'],\n        ['FR', 'RE', 'EN', 'NC', 'CH']\n      )\n    ).toEqual(['FR', 'NC']);\n  });\n  test('getIntersection - 2', () => {\n    expect(getIntersection(['aa', 'aa'], ['aa', 'aa', 'aa'])).toEqual([\n      'aa',\n      'aa',\n    ]);\n  });\n});\n"})})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"2023\ub144 10\uc6d4 05\uc77c \uc2dc\ub3c4"}),(0,r.jsxs)("div",{markdown:"1",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * @param {string} str1\n * @param {string} str2\n * @returns {number}\n */\nfunction solution(str1, str2) {\n  // \ubaa8\ub450 \uc18c\ubb38\uc790 \ucc98\ub9ac\n  // 2\uac1c \ucabc\uac1c\uae30\n  const leftList = splitByTwo(str1.toUpperCase());\n  const rightList = splitByTwo(str2.toUpperCase());\n\n  // \uad50\uc9d1\ud569\n  const intersectionSet = getIntersection(leftList, rightList);\n\n  // \ud569\uc9d1\ud569\n  const unionSet = getUnion(leftList, rightList);\n\n  // \ubd84\ubaa8 \uc0ac\uc774\uc988 0\ub300\uc751\ud558\uae30\n  if (unionSet.length === 0) return 65536;\n  return parseInt((intersectionSet.length / unionSet.length) * 65536);\n}\n\n/**\n * @param {string} str\n * @returns {string[]}\n */\nfunction splitByTwo(str) {\n  const result = [];\n  for (let i = 0; i < str.length - 1; i += 1) {\n    const item = str.slice(i, i + 2);\n    // \uacf5\ubc31\uc774\ub098 \uc22b\uc790, \ud2b9\uc218 \ubb38\uc790 -> \ubb38\ub098\uc5f4\ub9cc \ud574\ub2f9\ud558\ub294 \uc815\uaddc\ud45c\ud604\uc2dd\n    if (/^[a-zA-Z]+$/.test(item)) result.push(item);\n  }\n  return result;\n}\n\n/**\n * @param {string[]} set1\n * @param {string[]} set2\n * @returns {string[]}\n */\nfunction getIntersection(set1, set2) {\n  // \ube48\ub3c4\uc218 \uce74\uc6b4\ud130\n  /** @type {Map<string, {left: number, right: number}>} */\n  const memo = new Map();\n  set1.forEach((elem) => {\n    const pointer = memo.get(elem);\n    if (pointer)\n      memo.set(elem, { ...pointer, left: pointer.left + 1, right: 0 });\n    else memo.set(elem, { ...pointer, left: 1, right: 0 });\n  });\n  set2.forEach((elem) => {\n    const pointer = memo.get(elem);\n    if (pointer) memo.set(elem, { ...pointer, right: pointer.right + 1 });\n    else memo.set(elem, { ...pointer, right: 1 });\n  });\n  const result = [];\n  memo.forEach((value, key) => {\n    const left = value.left;\n    const right = value.right;\n    if (left > right) result.push(...Array.from({ length: right }, () => key));\n    else result.push(...Array.from({ length: left }, () => key));\n  });\n\n  return result;\n}\n\n/**\n * @param {string[]} set1\n * @param {string[]} set2\n * @returns {string[]}\n */\nfunction getUnion(set1, set2) {\n  // \ube48\ub3c4\uc218 \uce74\uc6b4\ud130\n  /** @type {Map<string, {left: number, right: number}>} */\n  const memo = new Map();\n  set1.forEach((elem) => {\n    const pointer = memo.get(elem);\n    if (pointer)\n      memo.set(elem, { ...pointer, left: pointer.left + 1, right: 0 });\n    else memo.set(elem, { ...pointer, left: 1, right: 0 });\n  });\n  set2.forEach((elem) => {\n    let pointer = memo.get(elem);\n    if (!pointer || !pointer.left) memo.set(elem, { ...pointer, left: 0 });\n    pointer = memo.get(elem);\n    if (pointer.right) memo.set(elem, { ...pointer, right: pointer.right + 1 });\n    else memo.set(elem, { ...pointer, right: 1 });\n  });\n\n  const result = [];\n  memo.forEach((value, key) => {\n    const left = value.left;\n    const right = value.right;\n    if (left < right) result.push(...Array.from({ length: right }, () => key));\n    else result.push(...Array.from({ length: left }, () => key));\n  });\n  return result;\n}\n\nexport default solution;\n\nexport { getUnion, getIntersection, splitByTwo };\n"})}),(0,r.jsx)(n.p,{children:"\ubaa8\ubc94\uc815\ub2f5\uc774 \uc544\ub2d9\ub2c8\ub2e4."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function solution(str1, str2) {\n  function explode(text) {\n    const result = [];\n    for (let i = 0; i < text.length - 1; i++) {\n      const node = text.substr(i, 2);\n      if (node.match(/[A-Za-z]{2}/)) {\n        result.push(node.toLowerCase());\n      }\n    }\n    return result;\n  }\n\n  const arr1 = explode(str1);\n  const arr2 = explode(str2);\n  const set = new Set([...arr1, ...arr2]);\n  let union = 0;\n  let intersection = 0;\n\n  set.forEach((item) => {\n    const has1 = arr1.filter((x) => x === item).length;\n    const has2 = arr2.filter((x) => x === item).length;\n    union += Math.max(has1, has2);\n    intersection += Math.min(has1, has2);\n  });\n  return union === 0 ? 65536 : Math.floor((intersection / union) * 65536);\n}\n"})})]})]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(67294);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);