"use strict";(self.webpackChunkarch_spatula_github_io=self.webpackChunkarch_spatula_github_io||[]).push([[49231],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},76661:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:9,description:"LRU",tags:["LRU","\uc54c\uace0\ub9ac\uc998","\uce90\uc2dc"]},i="LRU",s={unversionedId:"algorithms-and-data-structures/lru",id:"algorithms-and-data-structures/lru",title:"LRU",description:"LRU",source:"@site/diy-cs/algorithms-and-data-structures/lru.md",sourceDirName:"algorithms-and-data-structures",slug:"/algorithms-and-data-structures/lru",permalink:"/diy-cs/algorithms-and-data-structures/lru",draft:!1,tags:[{label:"LRU",permalink:"/diy-cs/tags/lru"},{label:"\uc54c\uace0\ub9ac\uc998",permalink:"/diy-cs/tags/\uc54c\uace0\ub9ac\uc998"},{label:"\uce90\uc2dc",permalink:"/diy-cs/tags/\uce90\uc2dc"}],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,description:"LRU",tags:["LRU","\uc54c\uace0\ub9ac\uc998","\uce90\uc2dc"]},sidebar:"tutorialSidebar",previous:{title:"\ud574\uc2dc",permalink:"/diy-cs/algorithms-and-data-structures/hash"},next:{title:"\uc815\ub82c",permalink:"/diy-cs/algorithms-and-data-structures/sort"}},c={},l=[{value:"1\ucc28 \uce90\uc2dc",id:"1\ucc28-\uce90\uc2dc",level:2}],u={toc:l},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lru"},"LRU"),(0,a.kt)("p",null,"\ube48\ub3c4\uc218 \uce74\uc6b4\ud130\uc640 Queue\uc758 \ud655\uc7a5\uc785\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"1\ucc28-\uce90\uc2dc"},"1\ucc28 \uce90\uc2dc"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://school.programmers.co.kr/learn/courses/30/lessons/17680"},"1\ucc28 \uce90\uc2dc")),(0,a.kt)("p",null,"\uc9c4\uc9dc Queue\uc790\ub8cc\uad6c\uc870\ucc98\ub7fc \uc815\ud655\ud788 \uc0bd\uc785, \ud0d0\uc0c9, \uc0ad\uc81c \uc2dc\uac04\uc744 \uac16\uc5b4\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import solution from './playground';\nimport { test, expect, describe } from 'vitest';\n\ndescribe('1\ucc28 \uce90\uc2dc', () => {\n  test('\uc608\uc81c 1', () => {\n    expect(\n      solution(3, [\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'NewYork',\n        'LA',\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'NewYork',\n        'LA',\n      ])\n    ).toBe(50);\n  });\n  test('\uc608\uc81c 2', () => {\n    expect(\n      solution(3, [\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n      ])\n    ).toBe(21);\n  });\n  test('\uc608\uc81c 3', () => {\n    expect(\n      solution(2, [\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'NewYork',\n        'LA',\n        'SanFrancisco',\n        'Seoul',\n        'Rome',\n        'Paris',\n        'Jeju',\n        'NewYork',\n        'Rome',\n      ])\n    ).toBe(60);\n  });\n  test('\uc608\uc81c 4', () => {\n    expect(\n      solution(5, [\n        'Jeju',\n        'Pangyo',\n        'Seoul',\n        'NewYork',\n        'LA',\n        'SanFrancisco',\n        'Seoul',\n        'Rome',\n        'Paris',\n        'Jeju',\n        'NewYork',\n        'Rome',\n      ])\n    ).toBe(52);\n  });\n  test('\uc608\uc81c 5', () => {\n    expect(solution(2, ['Jeju', 'Pangyo', 'NewYork', 'newyork'])).toBe(16);\n  });\n  test('\uc608\uc81c 6', () => {\n    expect(solution(0, ['Jeju', 'Pangyo', 'Seoul', 'NewYork', 'LA'])).toBe(25);\n  });\n  test('test', () => {\n    const arr = [1, 2, 3, 4, 5];\n    arr.splice(2, 1);\n    arr.unshift(3);\n    expect(arr).toEqual([3, 1, 2, 4, 5]);\n  });\n});\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"2023\ub144 09\uc6d4 15\uc77c \ud480\uc774"),(0,a.kt)("div",{markdown:"1"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} cacheSize\n * @param {string[]} cities\n * @returns {number}\n */\nfunction solution(cacheSize, cities) {\n  let time = 0;\n  const cache = [];\n  // \ub3c4\uc2dc \ud0d0\uc0c9\n  for (let i = 0; i < cities.length; i++) {\n    let hitFlag = false;\n    for (let j = 0; j < cache.length; j++) {\n      if (cache[j] === cities[i].toLowerCase()) {\n        time += 1;\n        hitFlag = true;\n        cache.splice(j, 1);\n        cache.unshift(cities[i].toLowerCase());\n        break;\n      }\n    }\n    if (hitFlag) continue;\n\n    // miss\n    time += 5;\n    cache.unshift(cities[i].toLowerCase());\n    if (cache.length > cacheSize) cache.pop();\n  }\n  return time;\n}\n")))))}m.isMDXComponent=!0}}]);